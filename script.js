// ==== JAVASCRIPT LOGIC STARTS HERE ====
document.addEventListener('DOMContentLoaded', () => {

    // --- DOM Elements ---
    const body = document.body;
    const langButtons = document.querySelectorAll('.lang-btn');
    const typeSelectorButtons = document.querySelectorAll('.selector-btn');
    const recipeDetailsContainer = document.getElementById('recipe-details');
    const keyDifferencesContainer = document.getElementById('key-differences');
    const butterMethodDesc = document.getElementById('butter-method-desc');
    const chillingMethodDesc = document.getElementById('chilling-method-desc');
    const otherNotesDesc = document.getElementById('other-notes-desc');
    const tipsListContainer = document.getElementById('tips-list');
    const keyDiffTitleElement = document.querySelector('[data-lang-key="keyDifferencesTitle"]');
    // ** NO LONGER NEED omarFavBubble **
    const cookieImageHeader = document.getElementById('cookie-image-header');
    const selectedCookieImage = document.getElementById('selected-cookie-image');
    const easterEggContainer = document.getElementById('easter-egg-container');
    const stuffedCookieImage = document.getElementById('stuffed-cookie-image');
    const unitTogglesContainer = document.getElementById('unit-toggles');
    const unitSelectorEn = document.getElementById('unit-selector-en');
    const unitButtonsEn = unitSelectorEn.querySelectorAll('.unit-btn');
    const unitSelectorAr = document.getElementById('unit-selector-ar');
    const unitButtonsAr = unitSelectorAr.querySelectorAll('.unit-btn');
    const mainTitleH1 = document.getElementById('main-title-h1'); // Get H1 for title update

    // --- State ---
    let currentLanguage = 'en';
    let currentCookieType = null;
    let currentUnitEn = 'imperial';
    let currentUnitAr = 'cups';

    // --- IMAGE PATHS ---
    const IMAGE_PATHS = {
        classic: 'classic.webp',
        thick: 'thick_and_gooey.webp',
        thin: 'thin and crispy.webp', // Watch out for this space!
        comparison: '3_cookie_types.jpg',
        stuffed: 'stuffed_cookie.webp'
    };

    // --- Content Data Store (Checked/Restored FULL arrays + Dual Units) ---
    const contentData = {
        en: {
             mainTitleBase: "<span class='emoji'>üç™</span> Omar's Insanely Good Cookie Guide! <span class='emoji'>üç™</span>", // Base title
             omarsFavSuffixEn: "<span class='omars-fav-text'>(Omar's Favorite!)</span>", // Suffix for title
             // ... other UI text ...
             yieldInfo: "Whips up about 18-24 cookies üç™",
             chooseStyle: "Alright, Cookie Boss! Pick Your Poison (aka Style!):",
             typeClassic: "Classic: The Crowd-Pleaser",
             typeThick: "Thick & Gooey: The Big Softie",
             typeThin: "Thin & Crispy: The Snapper",
             keyDifferencesTitle: "üîë Key Differences Breakdown!",
             butterTitle: "Butter & Mixing Mojo",
             chillingTitle: "To Chill or Not to Chill?",
             otherNotesTitle: "Quick Cheat Sheet",
             unitLabelEn: "Units:", // Unit label added
             placeholderSelect: "üëà Waiting for your command! Click a cookie style above... Let's bake something amazing! ‚ú®",
             tipsTitle: "<span class='emoji'>üí°</span> Omar's Top Secret Tips & Brainy Bits! <span class='emoji'>üî¨</span>",
             recipeTitlePrefix: "Alright, let's bake some",
             ingredientsHeader: "Grab This Stuff:",
             stepsHeader: "Let's Do This! Your Steps:",
             howToToastMilkPowderTitle: "ü§î So, How *Do* You Toast Milk Powder?",
             howToToastMilkPowder: "Super easy! Spread 3-4 Tbsp (20-25g) milk powder (the regular kind!) in a <span class='highlight'>dry skillet</span> (no oil!). Put it on <span class='highlight'>LOW heat</span> and <span class='critical'>STIR CONSTANTLY</span>. Seriously, don't even blink. It'll start smelling nutty and turn a light golden brown in 3-5 minutes. Whip it off the heat IMMEDIATELY (it burns fast!) and let it cool completely. BOOM. Flavor unlocked.",
             scienceHeader: "<span class='emoji'>ü§ì</span> Nerd Corner: Why This Cookie is Awesome...",
             easterEggTitle: "üèÜ You Legend! You Picked GOOEY! üèÜ",
             easterEggIntro: "Okay, since you obviously have impeccable taste (like me!), ready to unlock a secret level?",
             easterEggIdea: "üî• STUFFED COOKIE TIME! üî•",
             easterEggDesc: "It's easy: Flatten a dough ball slightly, make a dent, stuff about <span class='highlight'>1 generous teaspoon</span> of Nutella OR... you guessed it... Pistachio Spread! Yep, because apparently everything needs pistachio now... but hey, it's actually <span class=\"critical\">SO GOOD</span> here! üòâ Seal it up, roll gently, bake as usual (maybe +1 min).",
             easterEggPistachioTip: "Trust the pistachio process. You won't regret it.",
             pistachioReco: "Best Spread I've Tried (Seriously):",
             pistachioLinkSource: "(Amazon EG)",
             finalTag: "Hope you nail it! Show me your results & tag me!<br><a href=\"https://www.instagram.com/omarisavibe/\" target=\"_blank\" rel=\"noopener noreferrer\">@omarisavibe</a> on Insta! Yalla, bake happy! üòÑ",
            cookies: {
                 classic: { // *** CLASSIC DATA (EN) ***
                    name: "Classic Balanced Cookies", theme: "classic-theme", imageSrcKey: 'classic',
                    butterMethod: "Use <span class='highlight'>COOOLED but LIQUID</span> Brown Butter. Whisking, not creaming!",
                    chillingMethod: "<span class='highlight'>Chill RECOMMENDED:</span> Min 30 mins, up to 24 hrs fridge.",
                    otherNotes: "Flour: ~2 1/2 cups (300-310g). <span class='highlight'>Yes</span> to 1/2 tsp Baking Powder.",
                    ingredients: [
                          { key: 'butter', emoji: 'üßà', imperial: 'Brown Butter: 1 cup', metric: '227g', text_extra: ', <span class="critical">COOLED but LIQUID</span> <span class="critical">(vital!)</span>' },
                          { key: 'sugar', emoji: 'üç¨', imperial: 'Sugars: 1 1/4 cups Light Brown Sugar (packed!) + 1/2 cup White Granulated', metric: '250g Light Brown (packed!) + 100g Granulated' },
                          { key: 'flour', emoji: 'üçö', imperial: 'Flour: ~2 1/2 cups All-Purpose', metric: '300-310g', text_extra: ' (spoon & level!)' },
                          { key: 'leaveners', emoji: '‚ú®', imperial: 'Leaveners: 1 tsp Baking Soda + <span class="highlight">1/2 tsp Baking Powder</span>', metric: '1 tsp Soda + <span class="highlight">1/2 tsp Powder</span>' },
                          { key: 'choco', emoji: 'üç´', imperial: 'Chocolate: 1 1/2 to 2 cups!', metric: '255-340g!', text_extra: ' (Try <a href="fb-link">Dropsy MILK</a>!)'},
                          { key: 'eggs', emoji: 'ü•ö', imperial: 'Eggs: 2 Large', metric: '2 Large'},
                          { key: 'vanilla', emoji: 'üè∫', imperial: 'Vanilla: 2 tsp Good Stuff', metric: '2 tsp (10ml)'},
                          { key: 'salt', emoji: 'üßÇ', imperial: 'Salt: 1 tsp Kosher (or 1/2 tsp fine)', metric: '~5-6g Kosher (or 3g fine)'},
                          { key: 'milkpowder', emoji: 'ü•õ', imperial: 'Optional: 3-4 Tbsp Toasted Milk Powder', metric: '20-25g'}
                      ],
                       steps: [ 'Prep dry stuff...', 'Ensure cool butter...', 'WHISK butter & sugars...', 'Eggs & vanilla...', 'Mix dry to wet (NO OVERMIX)...', 'Fold chocolate...', 'CHILL (30min+)...', 'Preheat 375F/190C...', 'Scoop (~2Tbsp)...', 'Bake 10-12 min...', 'Cool on pan 5-10min. üéâ'],
                       customScienceNote: "Liquid butter = denser, chewier cookie. Baking powder = lift. Chilling = flavor + spread control. Brown butter + Toasted milk = Maillard party!"
                 }, // End Classic
                 thick: { // *** THICK DATA (EN) ***
                       name: "Thick & Gooey Giants", theme: "thick-theme", imageSrcKey: 'thick',
                       butterMethod: "Use <span class='critical'>CHILLED SOLID</span> Brown Butter. Time to <span class='critical'>CREAM</span> it fluffy!",
                       chillingMethod: "<span class='critical'>CHILL IS MANDATORY!</span> <span class='highlight'>5+ hrs FREEZER</span> (fast!) OR <span class='highlight'>24-72 hrs FRIDGE</span> (best!).",
                       otherNotes: "Use <span class='highlight'>MORE flour</span> (~2 1/2-2 3/4 cups / 310-330g). Use Powder. <span class='highlight'>Optional: Cornstarch</span>.",
                       ingredients: [
                           { key: 'butter', emoji: 'üßà', imperial: 'Brown Butter: 1 cup', metric: '227g', text_extra: ', <span class="critical">CHILLED SOLID</span>' },
                           { key: 'sugar', emoji: 'üç¨', imperial: 'Sugars: Try 1 1/2 cups Brown + 1/4 cup White', metric: '~300g Brown + 50g White' },
                           { key: 'flour', emoji: 'üçö', imperial: 'Flour: <span class="highlight critical">MORE ~2 1/2 - 2 3/4 cups</span> AP', metric: '<span class="highlight critical">310-330g</span> AP' },
                           { key: 'starch', emoji: '‚≠ê', imperial: 'Optional: 1-2 Tbsp Cornstarch', metric: '~8-16g' },
                           { key: 'leaveners', emoji: '‚ú®', imperial: 'Leaveners: 1 tsp Baking Soda + <span class="highlight">1/2 tsp Baking Powder</span>', metric: '1 tsp Soda + <span class="highlight">1/2 tsp Powder</span>' },
                           { key: 'choco', emoji: 'üç´', imperial: 'Chocolate: <span class="highlight">Generous! 2 cups+</span>', metric: '<span class="highlight">340g+</span>' },
                           { key: 'eggs', emoji: 'ü•ö', imperial: 'Eggs: 2 Large', metric: '2 Large' },
                           { key: 'vanilla', emoji: 'üè∫', imperial: 'Vanilla: 2 tsp', metric: '2 tsp (10ml)' },
                           { key: 'salt', emoji: 'üßÇ', imperial: 'Salt: 1 tsp Kosher (or 1/2 tsp fine)', metric: '~5-6g Kosher (or 3g fine)' },
                           { key: 'milkpowder', emoji: 'ü•õ', imperial: 'Optional: 3-4 Tbsp Toasted Milk Powder', metric: '20-25g'}
                       ],
                       steps: [ 'Prep dry (more flour!)...', 'Ensure solid butter...', 'CREAM butter & sugar 3-5min...', 'Eggs & vanilla...', 'Mix dry (NO OVERMIX)...', 'Fold LOTS chocolate...', 'MANDATORY CHILL...', 'Preheat 375F/190C...', 'Scoop LARGE, Keep TALL...', 'Bake 12-15min (underdone center!)...', 'Cool on pan 10-15min! üòç' ],
                       customScienceNote: "Creaming cold fat = air = lift! More flour = structure. Mandatory chill = solid fat = less spread, + hydrated flour & flavor enzymes. Cornstarch = tenderness."
                  }, // End Thick
                   thin: { // *** THIN DATA (EN) ***
                      name: "Thin & Crispy Snappers", theme: "thin-theme", imageSrcKey: 'thin',
                      butterMethod: "Use <span class='critical'>WARM LIQUID</span> Brown Butter. Simple whisking!",
                      chillingMethod: "<span class='critical'>NO CHILL ZONE!</span> Bake immediately for max spread.",
                      otherNotes: "Use <span class='highlight'>LESS flour</span> (~2 1/4-2 1/2 cups / 280-300g). <span class='critical'>NO Powder!</span> More WHITE sugar = crisp! <span class='highlight'>Opt: Milk</span>.",
                       ingredients: [
                           { key: 'butter', emoji: 'üßà', imperial: 'Brown Butter: 1 cup', metric: '227g', text_extra:', <span class="critical">WARM & LIQUID</span>' },
                           { key: 'sugar', emoji: 'üç¨', imperial: 'Sugars: More WHITE! (e.g. 1 1/4c White / 1/2c Brown)', metric: '~250g White / 100g Brown' },
                           { key: 'flour', emoji: 'üçö', imperial: 'Flour: <span class="highlight critical">LESS ~2 1/4 - 2 1/2 cups</span> AP', metric: '<span class="highlight critical">280-300g</span> AP' },
                           { key: 'leaveners', emoji: '‚ú®', imperial: 'Leaveners: 1 tsp Baking Soda <span class="critical">ONLY</span>', metric: '1 tsp Soda <span class="critical">ONLY</span>' },
                           { key: 'extra', emoji: 'üíß', imperial: 'Optional: 1-2 Tbsp Milk', metric: '~15-30ml'},
                           { key: 'choco', emoji: 'üç´', imperial: 'Chocolate: ~1 1/2 cups Chips', metric: '~255g' },
                           { key: 'eggs', emoji: 'ü•ö', imperial: 'Eggs: 2 Large', metric: '2 Large'},
                           { key: 'vanilla', emoji: 'üè∫', imperial: 'Vanilla: 2 tsp', metric: '2 tsp (10ml)' },
                           { key: 'salt', emoji: 'üßÇ', imperial: 'Salt: 1 tsp Kosher (or 1/2 tsp fine)', metric: '~5-6g Kosher (or 3g fine)' },
                           { key: 'milkpowder', emoji: 'ü•õ', imperial: 'Optional: 3-4 Tbsp Toasted Milk Powder', metric: '20-25g'}
                       ],
                       steps: [ 'Prep dry (less flour, SODA ONLY!)...', 'Ensure warm liquid butter...','WHISK butter & sugars (more white!)...','Eggs, vanilla, opt. milk...','Mix dry (NO OVERMIX)...','Fold chocolate...','NO CHILLING...','Preheat 350F/175C...','Scoop SMALL, Space FAR, Maybe flatten...','Bake 12-15min (GOLDEN BROWN!)...','Cool on pan 2-5min. Snap! ‚ú®'],
                       customScienceNote: "Warm liquid butter melts fast = SPREAD! Less flour = less structure. High white sugar caramelizes = SNAP! No powder = no lift fighting spread. Physics!"
                   } // End Thin
             }, // End EN Cookies Object
              tips: [ // English Tips - Confirmed Array Structure
                 { key: 'tip1', emoji: 'üíé', text: 'Quality Counts: Use good chocolate (like Dropsy!) & REAL vanilla.' }, { key: 'tip2', emoji: '‚öñÔ∏è', text: 'Spoon & Level Flour: Don\'t pack the measuring cup! (Aim for ~120-125g per cup if scaling!)' }, { key: 'tip3', emoji: 'ü§´', text: 'The Mixing Secret: Stop AS SOON as the flour disappears. Tender cookies thank you.' }, { key: 'tip4', emoji: 'üßä', text: 'Chill Isn\'t Just Waiting: It deepens flavor, controls spread & texture. Respect the chill (when needed!).' }, { key: 'tip5', emoji: 'ü•Ñ', text: 'Scoop Smart: Use a cookie scoop (like a #40 / ~1.5 Tbsp scoop) for evenly baked beauties.' }, { key: 'tip6', emoji: 'üßÇ', text: 'Flaky Salt Finish: A little sprinkle *before* baking makes chocolate pop! So fancy.' }, { key: 'tip7', emoji: 'üí•', text: 'Want Ripples? Try Pan Banging! Firmly bang the sheet on the counter 2-3 times during the last few mins of baking. Cool!' }, { key: 'tip8', emoji: '‚è≥', text: 'Cooling IS Part of Baking: Let cookies set on the hot pan for 5-10 mins (10-15 for Thick!) - vital!' }, { key: 'tip9', emoji: '‚ùÑÔ∏è', text: 'Freeze Like a Pro: Scoop dough balls (~30-45g each) onto a tray, freeze solid, then bag \'em. Bake straight from frozen! Add 1-2 mins baking time (maybe lower temp ~350F/175C). Fresh cookies ANYTIME! YES!' }, { key: 'sci1', emoji: 'üî•', text: 'Brown Butter = Flavor Gold: It\'s toasted milk solids & nutty goodness!' }, { key: 'sci2', emoji: 'ü•õ', text: 'Toasted Milk Powder = Extra Credit Flavor: More nutty, caramelly notes? Sign me up.' } // Last item no comma
             ] // End EN Tips Array
         }, // End 'en' object

         ar: { // ** START ARABIC SECTION **
             mainTitleBase: "<span class='emoji'>üç™</span> ÿØŸÑŸäŸÑ ÿπŸÖÿ± ÿßŸÑÿ±ŸáŸäÿ® ŸÑŸÄ<span class='highlight'>ÿ£ÿ≠ŸÑŸâ ŸÉŸàŸÉŸäÿ≤</span>! <span class='emoji'>üç™</span>", // Base title for AR
             omarsFavSuffixAr: "<span class='omars-fav-text'>(ÿßŸÑŸÖŸÅÿ∂ŸÑ ÿπŸÜÿØ ÿπŸÖÿ±!)</span>", // Suffix for AR title
             // ... Other UI Text ...
              yieldInfo: "ÿ®ÿ™ÿ∑ŸÑÿπ ÿ≠ŸàÿßŸÑŸä 18-24 ŸÉŸàŸÉŸä üç™",
              chooseStyle: "ŸäŸÑÿß Ÿäÿß ŸÉÿ®Ÿäÿ±ÿå ÿßÿÆÿ™ÿßÿ± ÿßŸÑŸÜŸàÿπ ÿßŸÑŸÑŸä ŸáŸäÿØŸÖÿ±ŸÜÿß (ŸäÿπŸÜŸä ÿßŸÑÿ¥ŸÉŸÑ!)",
              typeClassic: "ÿßŸÑŸÉŸÑÿßÿ≥ŸäŸÉŸä: ÿØŸá ÿ®ŸäŸÅÿ±ÿ≠ ÿßŸÑÿ¨ŸÖŸáŸàÿ±",
              typeThick: "ÿßŸÑÿ≥ŸÖŸäŸÉ ŸàÿßŸÑŸÑŸäŸëŸÜ: ÿØÿ®ŸÑÿ© Soft",
              typeThin: "ÿßŸÑÿ±ŸÅŸäÿπ ŸàÿßŸÑŸÖŸÇÿ±ŸÖÿ¥: ÿßŸÑŸÉŸàŸÉŸä ÿßŸÑŸÉÿ±ŸÜÿ¥",
              keyDifferencesTitle: "üîë ÿßŸÑŸÅÿ±ŸàŸÇÿßÿ™ ÿßŸÑÿ£ÿ≥ÿßÿ≥Ÿäÿ© ÿ®ŸäŸÜ ÿßŸÑÿ£ŸÜŸàÿßÿπ!",
              butterTitle: "ÿßŸÑÿ≤ÿ®ÿØÿ© Ÿàÿ∑ÿ±ŸäŸÇÿ© ÿßŸÑÿÆŸÑÿ∑",
              chillingTitle: "ÿ™ÿ®ÿ±ŸäÿØ ÿßŸÑÿπÿ¨ŸäŸÜ ŸàŸÑÿß ŸÑÿ£ÿü",
              otherNotesTitle: "ŸÖŸÑÿ≠Ÿàÿ∏ÿßÿ™ ÿ≥ÿ±Ÿäÿπÿ©",
              unitLabelAr: "ÿßŸÑŸàÿ≠ÿØÿßÿ™:", // Arabic Unit Label
              placeholderSelect: "üëà ÿßŸÜÿ™ÿ∏ÿ± ÿ•ÿ¥ÿßÿ±ÿ™ŸÉ! ÿØŸàÿ≥ ÿπŸÑŸâ ÿ£Ÿä ÿ¥ŸÉŸÑ ŸÅŸàŸÇ... ÿ™ÿπÿßŸÑŸâ ŸÜÿÆÿ®ÿ≤ ÿ≠ÿßÿ¨ÿ© ÿ¨ÿßŸÖÿØÿ©! ‚ú®",
              tipsTitle: "<span class='emoji'>üí°</span> ŸÜÿµÿßŸäÿ≠ ÿπŸÖÿ± ÿßŸÑÿ≥ÿ±Ÿäÿ© Ÿàÿ≠ÿßÿ¨ÿßÿ™ ÿπŸÑŸÖŸäÿ© ÿ¨ÿßŸÖÿØÿ©! <span class='emoji'>üî¨</span>",
              recipeTitlePrefix: "ŸäŸÑÿß ŸÜÿÆÿ®ÿ≤",
              ingredientsHeader: "ÿßŸÑŸÖŸÉŸàŸÜÿßÿ™:",
              stepsHeader: "ÿßŸÑÿÆÿ∑Ÿàÿßÿ™:",
              howToToastMilkPowderTitle: "ü§î ÿ•ÿ≤ÿßŸä ŸÜÿ≠ŸÖÿ≥ ÿßŸÑÿ®ŸàÿØÿ±ÿ©ÿü",
              howToToastMilkPowder: "ÿ≥ŸáŸÑÿ© ÿ£ŸàŸä! ÿßŸÜÿ¥ÿ± 3-4 ŸÖŸÑÿßÿπŸÇ ÿ®ŸàÿØÿ±ÿ© ŸÑÿ®ŸÜ (ÿπÿßÿØŸäÿ©) ŸÅŸä <span class='highlight'>ŸÖŸÇŸÑÿßÿ© ÿ¨ÿßŸÅÿ©</span> (ŸÖŸÜ ÿ∫Ÿäÿ± ÿ≤Ÿäÿ™!). ÿ¥ÿ∫ŸÑŸáÿß ÿπŸÑŸâ <span class='highlight'>ŸÜÿßÿ± ŸáÿßÿØŸäÿ©</span> Ÿà<span class='critical'>ŸÇŸÑŸëÿ® ÿ®ÿßÿ≥ÿ™ŸÖÿ±ÿßÿ±</span>. ÿ®ÿ¨ÿØ ŸÖÿ™ÿ∫ŸÖÿ∂ÿ¥ ÿπŸäŸÜŸÉ. Ÿáÿ™ÿ®ÿØÿ£ ÿ±Ÿäÿ≠ÿ™Ÿáÿß ÿ™ÿ∑ŸÑÿπ ŸàŸÖŸäÿ®ŸÇŸâ ŸÑŸàŸÜŸáÿß ÿØŸáÿ®Ÿä ŸÅÿßÿ™ÿ≠ÿßŸÜÿ© ŸÅŸä 3-5 ÿØŸÇÿßŸäŸÇ. ÿ¥ŸäŸÑŸáÿß ŸÖŸÜ ÿßŸÑŸÜÿßÿ± ŸÅŸàÿ±ÿßŸã (ÿπÿ¥ÿßŸÜ ÿ®ÿ™ÿ≠ÿ™ÿ±ŸÇ ÿ®ÿ≥ÿ±ÿπÿ©!) Ÿàÿßÿ™ÿ±ŸÉŸáÿß ÿ™ÿ®ÿ±ÿØ. Ÿäÿß ÿ≥ŸÑÿßŸÖ ÿπŸÑŸâ ÿßŸÑÿ∑ÿπŸÖ!",
              scienceHeader: "<span class='emoji'>ü§ì</span> ÿ≤ÿßŸàŸäÿ© ÿßŸÑŸÜÿ∂ŸäŸÅÿ©: ŸÑŸäŸá ÿßŸÑŸÉŸàŸÉŸäÿ≤ ÿØŸä ÿ¨ÿßŸÖÿØÿ©...",
              easterEggTitle: "üèÜ Ÿäÿß ÿ®ÿ∑ŸÑ! ÿßÿÆÿ™ÿ±ÿ™ ÿßŸÑŸÜŸàÿπ ÿßŸÑÿ¨ŸàŸàŸä! üèÜ",
              easterEggIntro: "ÿ∑ÿ®ÿπŸãÿß ÿ•ÿ≠ŸÜÿß ÿπÿßÿ±ŸÅŸäŸÜ ÿ£ŸÜ ÿ∞ŸàŸÇŸÉ ÿ™ÿ≠ŸÅÿ© (ÿ≤ŸäŸä!)ÿå ÿ¨ÿßŸáÿ≤ ŸÑŸÑlevel ÿßŸÑÿ≥ÿ±Ÿäÿü",
              easterEggIdea: "üî• ŸÉŸàŸÉŸäÿ≤ ŸÖÿ≠ÿ¥Ÿäÿ©! üî•",
              easterEggDesc: "ÿ≥ŸáŸÑÿ©: ÿßŸÅÿ±ÿØ ŸÉÿ±ÿ© ÿßŸÑÿπÿ¨ŸäŸÜ ÿ¥ŸàŸäÿ©ÿå ÿßÿπŸÖŸÑ ÿ≠ŸÅÿ±ÿ© ÿµÿ∫Ÿäÿ±ÿ©ÿå Ÿàÿ≠ÿ∑ ŸÅŸäŸáÿß <span class='highlight'>ŸÖŸÑÿπŸÇÿ© ŸÉÿ®Ÿäÿ±ÿ©</span> ŸÜŸàÿ™ŸäŸÑÿß ÿ£Ÿà... ÿµÿ≠... ŸÖÿπÿ¨ŸàŸÜ ÿßŸÑŸÅÿ≥ÿ™ŸÇ! ÿ£ŸäŸàÿ©ÿå ŸÑÿ£ŸÜ ŸÉŸÑ ÿ≠ÿßÿ¨ÿ© ŸÖÿ≠ÿ™ÿßÿ¨ÿ© ŸÅÿ≥ÿ™ŸÇ ÿØŸÑŸàŸÇÿ™Ÿä... ŸÑŸÉŸÜ ÿ®ÿµÿ±ÿßÿ≠ÿ© ÿßŸÑÿ∑ÿπŸÖ <span class='critical'>ÿ¨ÿßŸÖÿØ ŸÇŸàŸä</span> ŸáŸÜÿß! üòâ ÿßÿ∫ŸÑŸÇŸáÿßŸÑŸÉ ŸàÿßÿØÿπŸÉŸá ŸàÿÆÿ®ÿ≤Ÿá ÿ≤Ÿä ÿßŸÑÿπÿßÿØŸä (ŸäŸÖŸÉŸÜ +1 ÿØŸÇŸäŸÇÿ©).",
              easterEggPistachioTip: "ÿ´ŸÇ ŸÅŸä ÿßŸÑŸÅÿ≥ÿ™ŸÇ. ŸÖÿ™ÿ™ŸÜÿØŸÖÿ¥.",
              pistachioReco: "ÿ£ÿ≠ŸÑŸâ ŸÖÿπÿ¨ŸàŸÜ ŸÅÿ≥ÿ™ŸÇ ÿ¨ÿ±ÿ®ÿ™Ÿá:",
              pistachioLinkSource: "(ÿ£ŸÖÿßÿ≤ŸàŸÜ ŸÖÿµÿ±)",
              finalTag: "ÿ®ÿßŸÑÿ™ŸàŸÅŸäŸÇ! ÿµŸàÿ± ÿßŸÑŸÜÿ™Ÿäÿ¨ÿ© Ÿàÿßÿ®ÿπÿ™ŸáÿßŸÑŸä!<br><a href=\"https://www.instagram.com/omarisavibe/\" target=\"_blank\" rel=\"noopener noreferrer\">@omarisavibe</a> ÿπŸÑŸâ ÿßŸÑÿßŸÜÿ≥ÿ™ÿ¨ÿ±ÿßŸÖ! ŸäŸÑÿßÿå ÿßÿÆÿ®ÿ≤Ÿàÿß ŸàÿßŸÜÿ™Ÿàÿß ŸÖÿ®ÿ≥Ÿàÿ∑ŸäŸÜ! üòÑ",
              cookies: {
                  classic: { // ** ARABIC CLASSIC DATA **
                      name: "ÿßŸÑŸÉŸàŸÉŸäÿ≤ ÿßŸÑŸÉŸÑÿßÿ≥ŸäŸÉŸä ÿßŸÑŸÖÿ™Ÿàÿßÿ≤ŸÜ", theme: "classic-theme", imageSrcKey: 'classic',
                      butterMethod: "ÿßÿ≥ÿ™ÿÆÿØŸÖ <span class='highlight'>ÿ≤ÿ®ÿØÿ© ÿ®ŸÜŸäÿ© ÿ≥ÿßÿ¶ŸÑÿ© Ÿàÿ®ÿßÿ±ÿØÿ©</span>. ÿ®ŸÜÿÆŸÅŸÇ ŸÖÿ¥ ÿ®ŸÜÿ∂ÿ±ÿ®ÿå ÿÆŸÑŸäŸáÿß ÿ≥ŸáŸÑÿ©.",
                      chillingMethod: "<span class='highlight'>ÿßŸÑÿ™ÿ®ÿ±ŸäÿØ ŸäŸÜŸÅÿπ:</span> 30 ÿØŸÇŸäŸÇÿ© ŸÅŸä ÿßŸÑÿ™ŸÑÿßÿ¨ÿ©ÿå ŸÇÿØ 24 ÿ≥ÿßÿπÿ©.",
                      otherNotes: "ÿßŸÑÿØŸÇŸäŸÇ: ~2 ¬Ω ŸÉŸàÿ®. <span class='highlight'>ŸÜÿπŸÖ</span> ŸÑŸÄ¬Ω ŸÖŸÑÿπŸÇÿ© ÿ®ŸäŸÉŸÜÿ¨ ÿ®ÿßŸàÿØÿ±.",
                      ingredients: [ // Structure: { key: '...', emoji: '...', cups: '...', grams: '...' }
                          {"key": "butter", "emoji": "üßà", "cups": "ÿßŸÑÿ≤ÿ®ÿØÿ© ÿßŸÑÿ®ŸÜŸäÿ©: 1 ŸÉŸàÿ®", "grams": "227 ÿ¨ÿ±ÿßŸÖ", "text_extra": "ÿå <span class='critical'>ÿ®ÿßÿ±ÿØÿ© Ÿàÿ≥ÿßÿ¶ŸÑÿ©</span> (ŸÖŸáŸÖ!)" },
                          {"key": "sugar", "emoji": "üç¨", "cups": "ÿßŸÑÿ≥ŸÉÿ±: 1 ¬º ŸÉŸàÿ® ÿ®ŸÜŸä ŸÅÿßÿ™ÿ≠ + ¬Ω ŸÉŸàÿ® ÿ£ÿ®Ÿäÿ∂", "grams": "250 ÿ¨ÿ±ÿßŸÖ ÿ®ŸÜŸä ŸÅÿßÿ™ÿ≠ + 100 ÿ¨ÿ±ÿßŸÖ ÿ£ÿ®Ÿäÿ∂"},
                          {"key": "flour", "emoji": "üçö", "cups": "ÿßŸÑÿØŸÇŸäŸÇ: ~2 ¬Ω ŸÉŸàÿ®", "grams": "300-310 ÿ¨ÿ±ÿßŸÖ"},
                          {"key": "leaveners", "emoji": "‚ú®", "cups": "ÿßŸÑÿ±ŸÅÿπ: 1 ŸÖŸÑÿπŸÇÿ© ÿµÿ∫Ÿäÿ±ÿ© ÿµŸàÿØÿß + <span class='highlight'>¬Ω ŸÖŸÑÿπŸÇÿ© ÿµÿ∫Ÿäÿ±ÿ© ÿ®ŸàÿØÿ±</span>", "grams": "1 ŸÖ.ÿµ ÿµŸàÿØÿß + <span class='highlight'>¬Ω ŸÖ.ÿµ ÿ®ŸàÿØÿ±</span>" },
                          {"key": "choco", "emoji": "üç´", "cups": "ÿ¥ŸàŸÉŸàŸÑÿßÿ™ÿ©: 1 ¬Ω - 2 ŸÉŸàÿ®!", "grams": "255-340 ÿ¨ÿ±ÿßŸÖ!", "text_extra": " (ŸÇÿ∑ÿπ ÿ£Ÿà ÿ¥Ÿäÿ®ÿ≥ ŸÉŸàŸäÿ≥. ÿ¨ÿ±ÿ® <a href='https://www.facebook.com/NAZEH.ElATAR/posts/%D8%B4%D9%8A%D9%83%D9%88%D9%84%D8%A7%D8%AA%D8%A9-%D8%AF%D8%B1%D9%88%D8%A8%D8%B3-%D9%87%D8%AA%D8%AE%D9%84%D9%8A-%D8%AD%D9%84%D9%88%D9%8A%D8%A7%D8%AA%D9%83-%D8%A3%D8%AD%D9%84%D9%89-%D9%88%D8%A3%D9%84%D8%B0-%D9%85%D8%AB%D8%A7%D9%84%D9%8A%D9%87-%D9%84%D9%84%D8%AA%D8%B2%D9%8A%D9%8A%D9%86-%D9%88%D8%B3%D9%87%D9%84%D9%87-%D8%A7%D9%84%D8%AA%D8%AD%D8%B6%D9%8A%D8%B1-%D9%88%D9%85%D8%AA%D9%88%D9%81%D8%B1%D9%87-%D8%A8%D8%B3%D8%B9%D8%B1/824531546557774/' target='_blank' rel='noopener noreferrer'>ÿØÿ±Ÿàÿ®ÿ≥Ÿä ÿ®ÿßŸÑÿ≠ŸÑŸäÿ®</a>!)" }, // Added link for Dropsy AR
                          {"key": "eggs", "emoji": "ü•ö", "cups": "ÿ®Ÿäÿ∂: 2 ŸÉÿ®Ÿäÿ±", "grams": "2 ŸÉÿ®Ÿäÿ±"},
                          {"key": "vanilla", "emoji": "üè∫", "cups": "ŸÅÿßŸÜŸäŸÑŸäÿß: 2 ŸÖŸÑÿπŸÇÿ© ÿµÿ∫Ÿäÿ±ÿ©", "grams": "2 ŸÖ.ÿµ (10 ŸÖŸÑ)" },
                          {"key": "salt", "emoji": "üßÇ", "cups": "ŸÖŸÑÿ≠: 1 ŸÖŸÑÿπŸÇÿ© ÿµÿ∫Ÿäÿ±ÿ© ÿÆÿ¥ŸÜ", "grams": "~5-6 ÿ¨ÿ±ÿßŸÖ ÿÆÿ¥ŸÜ"},
                          {"key": "milkpowder", "emoji": "ü•õ", "cups": "ÿßÿÆÿ™Ÿäÿßÿ±Ÿä: 3-4 ŸÖŸÑÿπŸÇÿ© ŸÉÿ®Ÿäÿ±ÿ© ÿ®ŸàÿØÿ±ÿ© ŸÑÿ®ŸÜ ŸÖÿ≠ŸÖÿµÿ©", "grams": "20-25 ÿ¨ÿ±ÿßŸÖ" }
                       ], // ** END AR Classic Ingredients **
                      steps: [ "ÿ¨Ÿáÿ≤ ÿßŸÑŸÖŸÉŸàŸÜÿßÿ™ ÿßŸÑÿ¨ÿßŸÅÿ©: ÿßÿÆŸÑÿ∑ ÿßŸÑÿØŸÇŸäŸÇÿå ÿ®ŸäŸÉŸÜÿ¨ ÿµŸàÿØÿßÿå ÿ®ŸäŸÉŸÜÿ¨ ÿ®ÿßŸàÿØÿ±ÿå ŸÖŸÑÿ≠ÿå Ÿàÿ®ŸàÿØÿ±ÿ© ŸÑÿ®ŸÜ (ŸÑŸà Ÿáÿ™ÿ≥ÿ™ÿÆÿØŸÖŸáÿß).","ÿ™ÿ£ŸÉÿØ ÿ•ŸÜ ÿßŸÑÿ≤ÿ®ÿØÿ© ÿßŸÑÿ®ŸÜŸäÿ© <span class='critical'>ÿ®ÿßÿ±ÿØÿ© ŸÑŸÉŸÜ ŸÑÿ≥ÿ© ÿ≥ÿßÿ¶ŸÑÿ©</span>.","ŸÅŸä ÿ∑ÿßÿ≥ ŸÉÿ®Ÿäÿ±ÿå <span class='highlight'>ÿßÿÆŸÅŸÇ</span> ÿßŸÑÿ≤ÿ®ÿØÿ© ŸàÿßŸÑÿ≥ŸÉÿ± ŸÖÿπ ÿ®ÿπÿ∂. ŸÖÿ¥ Ÿáÿ™ÿ®ŸÇŸâ fluffyÿå ÿπÿßÿØŸä!","ÿ£ÿ∂ŸÅ ÿßŸÑÿ®Ÿäÿ∂ Ÿàÿßÿ≠ÿØ ÿ®Ÿàÿßÿ≠ÿØÿå ÿ´ŸÖ ÿßŸÑŸÅÿßŸÜŸäŸÑŸäÿß. ÿßÿÆŸÑÿ∑ ŸÑÿ≠ÿØ ŸÖÿßŸäÿ™ÿ¨ÿßŸÜÿ≥.","ÿ∂ŸäŸÅ ÿßŸÑŸÖŸÉŸàŸÜÿßÿ™ ÿßŸÑÿ¨ÿßŸÅÿ© ÿπŸÑŸâ ÿßŸÑÿ≥ÿßÿ¶ŸÑÿ©. ÿßÿÆŸÑÿ∑ ÿ®ÿßŸÑŸäÿØ ÿ£Ÿà ŸÖŸäŸäŸÉÿ≥ÿ± ÿπŸÑŸâ low ŸÑÿ≠ÿØ ÿßŸÑÿ™ÿ¨ÿßŸÜÿ≥. <span class='critical'>ÿ®ÿ∑ŸÑ ÿÆŸÑÿ∑</span> ŸÑŸÖÿß ÿßŸÑÿØŸÇŸäŸÇ ŸäÿÆÿ™ŸÅŸä!","ÿßÿØÿÆŸÑ ÿßŸÑÿ¥ŸàŸÉŸàŸÑÿßÿ™ÿ© ÿ®ÿ±ŸÅŸÇ.","ÿ∫ÿ∑Ÿä ÿßŸÑÿπÿ¨ŸäŸÜÿ© Ÿà<span class='highlight'>ÿ®ÿ±ÿØŸáÿß</span>! <span class='critical'>30 ÿØŸÇŸäŸÇÿ©</span> ŸÅŸä ÿßŸÑÿ™ŸÑÿßÿ¨ÿ© ÿπŸÑŸâ ÿßŸÑÿ£ŸÇŸÑ.","ÿ≥ÿÆŸÜ ÿßŸÑŸÅÿ±ŸÜ ÿπŸÑŸâ <span class='highlight'>190¬∞C</span>. ÿ≠ÿ∑ Ÿàÿ±ŸÇ ÿ≤ÿ®ÿØÿ©.","ÿßÿπŸÖŸÑ ŸÉÿ±ÿßÿ™ ÿπÿ¨ŸäŸÜ (2 ŸÖŸÑÿπŸÇÿ© ŸÑŸÉŸÑ). ÿ≠ÿ∑ŸáŸÖ ŸÖÿ™ÿ®ÿßÿπÿØŸäŸÜ. ÿ≠ÿ∑ ŸÖŸÑÿ≠ ÿÆÿ¥ŸÜ ŸÑŸà ÿπÿßŸàÿ≤.","ÿßÿÆÿ®ÿ≤ <span class='highlight'>10-12 ÿØŸÇŸäŸÇÿ©</span>. ÿßŸÑÿ≠ŸàÿßŸÅ ÿ∞Ÿáÿ®Ÿäÿ© ŸàÿßŸÑŸàÿ≥ÿ∑ ŸÜÿßÿπŸÖ.","ÿ£ÿµÿπÿ® ÿÆÿ∑Ÿàÿ©: ÿßÿ™ÿ±ŸÉŸáÿß ÿ™ÿ®ÿ±ÿØ ŸÅŸä ÿßŸÑÿµŸäŸÜŸäÿ© 5-10 ÿØŸÇÿßŸäŸÇ ŸÇÿ®ŸÑ ÿßŸÑŸÜŸÇŸÑ! üéâ" ],
                      customScienceNote: "ÿßŸÑÿ≤ÿ®ÿØÿ© ÿßŸÑÿ≥ÿßÿ¶ŸÑÿ© ÿ™ŸÖŸÜÿπ ÿØÿÆŸàŸÑ ŸáŸàÿßÿ° ŸÉÿ´Ÿäÿ± = ŸÉŸàŸÉŸä ÿ∑ÿ±Ÿäÿ© (Chewy). ÿßŸÑÿ®ŸäŸÉŸÜÿ¨ ÿ®ŸàÿØÿ± Ÿäÿπÿ∑Ÿä ÿ®ÿπÿ∂ ÿßŸÑÿßÿ±ÿ™ŸÅÿßÿπ. ÿßŸÑÿ™ÿ®ÿ±ŸäÿØ Ÿäÿ™ÿ≠ŸÉŸÖ ŸÅŸä ÿßŸÑÿßŸÜÿ™ÿ¥ÿßÿ± ŸàŸäÿπÿ≤ÿ≤ ÿßŸÑŸÜŸÉŸáÿ©."
                  }, // ** END AR Classic **
                  thick: { // ** AR Thick START **
                       name: "ÿßŸÑŸÉŸàŸÉŸäÿ≤ ÿßŸÑÿ≥ŸÖŸäŸÉ ŸàÿßŸÑÿ¨ŸàŸàŸä", theme: "thick-theme", imageSrcKey: 'thick',
                       butterMethod: "ÿßÿ≥ÿ™ÿÆÿØŸÖ <span class='critical'>ÿ≤ÿ®ÿØÿ© ÿ®ŸÜŸäÿ© ŸÖÿ¨ŸÖÿØÿ©</span>. ÿßÿÆŸÅŸÇŸáÿß ŸÖÿπ ÿßŸÑÿ≥ŸÉÿ± ŸÑÿ™ÿµÿ®ÿ≠ Ÿáÿ¥ÿ©!",
                       chillingMethod: "<span class='critical'>ÿßŸÑÿ™ÿ®ÿ±ŸäÿØ ÿ•ÿ¨ÿ®ÿßÿ±Ÿä!</span> ÿ•ŸÖÿß <span class='highlight'>5 ÿ≥ÿßÿπÿßÿ™ ŸÅÿ±Ÿäÿ≤ÿ±</span> ÿ£Ÿà <span class='highlight'>24-72 ÿ≥ÿßÿπÿ© ÿ´ŸÑÿßÿ¨ÿ©</span>.",
                       otherNotes: "ÿØŸÇŸäŸÇ ÿ£ŸÉÿ™ÿ± (~2 ¬æ ŸÉŸàÿ®). ÿßÿ≥ÿ™ÿÆÿØŸÖ ÿßŸÑÿ®ŸäŸÉŸÜÿ¨ ÿ®ŸàÿØÿ±. ŸÖŸÖŸÉŸÜ 1-2 ŸÖŸÑÿπŸÇÿ© ŸÜÿ¥ÿß.",
                       ingredients: [
                           {"key": "butter", "emoji": "üßà", "cups": "ÿßŸÑÿ≤ÿ®ÿØÿ© ÿßŸÑÿ®ŸÜŸäÿ©: 1 ŸÉŸàÿ®", "grams": "227 ÿ¨ÿ±ÿßŸÖ", "text_extra": "ÿå <span class='critical'>ŸÖÿ¨ŸÖÿØÿ©</span> (ÿ®ÿ≥ ÿ∑ÿ±Ÿäÿ© ÿ¥ŸàŸäÿ©)"},
                           {"key": "sugar", "emoji": "üç¨", "cups": "ÿßŸÑÿ≥ŸÉÿ±: ~1 ¬Ω ŸÉŸàÿ® ÿ®ŸÜŸä + ¬º ŸÉŸàÿ® ÿ£ÿ®Ÿäÿ∂", "grams": "~300 ÿ¨ÿ±ÿßŸÖ ÿ®ŸÜŸä + 50 ÿ¨ÿ±ÿßŸÖ ÿ£ÿ®Ÿäÿ∂" },
                           {"key": "flour", "emoji": "üçö", "cups": "ÿßŸÑÿØŸÇŸäŸÇ: <span class='highlight critical'>ÿ£ŸÉÿ™ÿ± (~2 ¬Ω ŸÑŸÄ 2 ¬æ ŸÉŸàÿ®)</span>", "grams": "<span class='highlight critical'>310-330 ÿ¨ÿ±ÿßŸÖ</span>" },
                           {"key": "starch", "emoji": "‚≠ê", "cups": "ÿßÿÆÿ™Ÿäÿßÿ±Ÿä: 1-2 ŸÖŸÑÿπŸÇÿ© ŸÉÿ®Ÿäÿ±ÿ© ŸÜÿ¥ÿß", "grams": "~8-16 ÿ¨ÿ±ÿßŸÖ" },
                           {"key": "leaveners", "emoji": "‚ú®", "cups": "ÿßŸÑÿ±ŸÅÿπ: 1 ŸÖ.ÿµ ÿµŸàÿØÿß + <span class='highlight'>¬Ω ŸÖ.ÿµ ÿ®ŸàÿØÿ±</span>", "grams": "1 ŸÖ.ÿµ ÿµŸàÿØÿß + <span class='highlight'>¬Ω ŸÖ.ÿµ ÿ®ŸàÿØÿ±</span>" },
                           {"key": "choco", "emoji": "üç´", "cups": "ÿ¥ŸàŸÉŸàŸÑÿßÿ™ÿ©: <span class='highlight'>2 ŸÉŸàÿ®+ ŸÉÿ™Ÿäÿ±!</span>", "grams": "<span class='highlight'>340 ÿ¨ÿ±ÿßŸÖ+!</span>" },
                           {"key": "eggs", "emoji": "ü•ö", "cups": "ÿ®Ÿäÿ∂: 2 ŸÉÿ®Ÿäÿ±", "grams": "2 ŸÉÿ®Ÿäÿ±" },
                           {"key": "vanilla", "emoji": "üè∫", "cups": "ŸÅÿßŸÜŸäŸÑŸäÿß: 2 ŸÖŸÑÿπŸÇÿ© ÿµÿ∫Ÿäÿ±ÿ©", "grams": "2 ŸÖ.ÿµ (10 ŸÖŸÑ)" },
                           {"key": "salt", "emoji": "üßÇ", "cups": "ŸÖŸÑÿ≠: 1 ŸÖŸÑÿπŸÇÿ© ÿµÿ∫Ÿäÿ±ÿ© ÿÆÿ¥ŸÜ", "grams": "~5-6 ÿ¨ÿ±ÿßŸÖ ÿÆÿ¥ŸÜ"},
                           {"key": "milkpowder", "emoji": "ü•õ", "cups": "ÿßÿÆÿ™Ÿäÿßÿ±Ÿä: 3-4 ŸÖŸÑÿπŸÇÿ© ŸÉÿ®Ÿäÿ±ÿ© ÿ®ŸàÿØÿ±ÿ© ŸÑÿ®ŸÜ ŸÖÿ≠ŸÖÿµÿ©", "grams": "20-25 ÿ¨ÿ±ÿßŸÖ" }
                       ], // ** END AR Thick Ingredients **
                       steps: [ "ÿ¨Ÿáÿ≤ ÿßŸÑÿ¨ÿßŸÅ: ÿßÿÆŸÑÿ∑ ÿßŸÑÿØŸÇŸäŸÇ (ÿßŸÑŸÉŸÖŸäÿ© ÿßŸÑÿ£ŸÉÿ®ÿ±!)ÿå ÿßŸÑŸÜÿ¥ÿß (ŸÑŸà Ÿáÿ™ÿ≥ÿ™ÿÆÿØŸÖ)ÿå ÿßŸÑÿ®ŸäŸÉŸÜÿ¨ ÿµŸàÿØÿßÿå ÿßŸÑÿ®ŸäŸÉŸÜÿ¨ ÿ®ÿßŸàÿØÿ±ÿå ÿßŸÑŸÖŸÑÿ≠ÿå Ÿàÿ®ŸàÿØÿ±ÿ© ÿßŸÑŸÑÿ®ŸÜ ÿßŸÑŸÖÿ≠ŸÖÿµÿ©.","ÿßÿ™ÿ£ŸÉÿØ ŸÉŸàŸäÿ≥ ÿßŸÜ ÿßŸÑÿ≤ÿ®ÿØÿ© <span class='critical'>ŸÖÿ¨ŸÖÿØÿ©</span> ÿ®ÿ≥ ÿ™ŸÇÿØÿ± ÿ™ÿ∫ÿ±ŸÅŸáÿß ÿ®ÿ≥ŸáŸàŸÑÿ©."," ÿ®ÿßŸÑÿπÿ¨ÿßŸÜ ÿ£Ÿà ÿßŸÑŸÖÿ∂ÿ±ÿ® <span class='critical'>ÿßÿÆŸÅŸÇ</span> ÿßŸÑÿ≤ÿ®ÿØÿ© ÿßŸÑŸÖÿ¨ŸÖÿØÿ© ŸàÿßŸÑÿ≥ŸÉÿ± 3-5 ÿØŸÇÿßŸäŸÇ ŸÑÿ™ÿµÿ®ÿ≠ Ÿáÿ¥ÿ©.","ÿ∂ŸäŸÅ ÿßŸÑÿ®Ÿäÿ∂ Ÿàÿßÿ≠ÿØÿ© Ÿàÿßÿ≠ÿØÿ©ÿå ÿ´ŸÖ ÿßŸÑŸÅÿßŸÜŸäŸÑŸäÿß.","ŸÜÿ≤ŸÑ ÿßŸÑÿ¨ÿßŸÅ ŸàŸÇŸÑŸëÿ® <span class='critical'>Ÿäÿß ÿØŸàÿ® ŸäÿÆÿ™ŸÑÿ∑Ÿàÿß</span>.","ÿ≠ÿ∑ ŸÉŸàŸÖ ÿßŸÑÿ¥ŸàŸÉŸàŸÑÿßÿ™ÿ© ŸàŸÇŸÑÿ® ÿ®ÿ±ŸÅŸÇ.","<span class='critical'>ÿ∫ÿ∑Ÿä Ÿàÿ®ÿ±ÿØ (ÿ•ÿ¨ÿ®ÿßÿßÿßÿßÿ±Ÿä!)</span>: <span class='highlight'>5+ ÿ≥ ŸÅÿ±Ÿäÿ≤ÿ±</span> ÿ£Ÿà <span class='highlight'>24-72 ÿ≥ ÿ´ŸÑÿßÿ¨ÿ©</span>.","ÿ≥ÿÆŸÜ ÿßŸÑŸÅÿ±ŸÜ <span class='highlight'>190¬∞ŸÖ</span>.","ŸÉŸàÿ±Ÿáÿß <span class='critical'>ŸÉÿ®Ÿäÿ±ÿ© (~3-4 ŸÖ.ŸÉ)</span> <span class='highlight'>ŸàÿÆŸÑŸäŸáÿß ÿπÿßŸÑŸäÿ©!</span> ÿ±ÿ¥ÿ© ŸÖŸÑÿ≠ ÿÆÿ¥ŸÜ.","ÿßÿÆÿ®ÿ≤ <span class='highlight'>12-15 ÿØŸÇŸäŸÇÿ©</span> (ÿßŸÑŸÜÿµ <span class='critical'>ÿ¥ŸÉŸÑŸá ÿ∑ÿ±Ÿä ÿ¨ÿØÿßŸã!</span>).","ÿßŸÑÿµÿ®ÿ± ŸÖŸÅÿ™ÿßÿ≠ ÿßŸÑŸÅÿ±ÿ¨: ÿ≥Ÿäÿ®Ÿáÿß ÿπ ÿßŸÑÿµŸäŸÜŸäÿ© <span class='critical'>10-15 ÿØŸÇŸäŸÇÿ©</span> ŸÇÿ®ŸÑ ÿßŸÑŸÜŸÇŸÑ! üòç" ],
                       customScienceNote: "ÿÆŸÅŸÇ ÿßŸÑÿ≤ÿ®ÿØÿ© ÿßŸÑŸÖÿ¨ŸÖÿØÿ© ŸäÿØÿÆŸÑ ÿßŸÑŸáŸàÿßÿ° = ÿßÿ±ÿ™ŸÅÿßÿπ. ÿßŸÑÿØŸÇŸäŸÇ ÿßŸÑÿ£ŸÉÿ´ÿ± = ŸÇŸàÿßŸÖ ŸÖÿ™ŸÖÿßÿ≥ŸÉ. ÿßŸÑÿ™ÿ®ÿ±ŸäÿØ ÿßŸÑÿ•ÿ¨ÿ®ÿßÿ±Ÿä Ÿäÿ¨ŸÖÿØ ÿßŸÑÿØŸáŸàŸÜ ŸÅÿ™ÿ∞Ÿàÿ® ÿ£ÿ®ÿ∑ÿ£ = ÿßŸÜÿ™ÿ¥ÿßÿ± ÿ£ŸÇŸÑ. ÿßŸÑŸÜÿ¥ÿß ŸäŸÇŸÑŸÑ ÿßŸÑÿ¨ŸÑŸàÿ™ŸäŸÜ = ÿ∑ÿ±ÿßŸàÿ©."
                  }, // ** END AR Thick **
                  thin: { // ** AR Thin START **
                      name: "ÿßŸÑŸÉŸàŸÉŸäÿ≤ ÿßŸÑÿ±ŸÅŸäÿπ ÿßŸÑŸÖŸÇÿ±ŸÖÿ¥", theme: "thin-theme", imageSrcKey: 'thin',
                      butterMethod: "ÿßÿ≥ÿ™ÿÆÿØŸÖ <span class='critical'>ÿ≤ÿ®ÿØÿ© ÿ®ŸÜŸäÿ© ÿØÿßŸÅÿ¶ÿ© Ÿàÿ≥ÿßÿ¶ŸÑÿ©</span>. ÿÆŸÑÿ∑ ÿπÿßÿØŸä.",
                      chillingMethod: "<span class='critical'>ŸÖŸÖŸÜŸàÿπ ÿßŸÑÿ™ÿ®ÿ±ŸäÿØ ŸÜŸáÿßÿ¶Ÿä!</span> ÿπÿ¥ÿßŸÜ ÿ™ŸÅÿ±ÿØ.",
                      otherNotes: "ÿØŸÇŸäŸÇ ÿ£ŸÇŸÑ (~2 ¬º ŸÉŸàÿ®). <span class='critical'>ŸÑÿß ŸÑŸÑÿ®ŸäŸÉŸÜÿ¨ ÿ®ŸàÿØÿ±!</span> ÿ≥ŸÉÿ± ÿ£ÿ®Ÿäÿ∂ ÿ£ŸÉÿ´ÿ± = ŸÇÿ±ŸÖÿ¥ÿ©.",
                      ingredients: [
                           {"key": "butter", "emoji": "üßà", "cups": "ÿ≤ÿ®ÿØÿ© ÿ®ŸÜŸäÿ©: 1 ŸÉŸàÿ®", "grams": "227 ÿ¨ÿ±ÿßŸÖ", "text_extra": "ÿå <span class='critical'>ÿØÿßŸÅÿ¶ÿ© Ÿàÿ≥ÿßÿ¶ŸÑÿ©</span>" },
                           {"key": "sugar", "emoji": "üç¨", "cups": "ÿ≥ŸÉÿ±: ÿ£ÿ®Ÿäÿ∂ ÿ£ŸÉÿ™ÿ±! (ŸÖÿ´ŸÑÿß 1 ¬º ÿ£ÿ®Ÿäÿ∂ / ¬Ω ÿ®ŸÜŸä)", "grams": "~250 ÿ¨ ÿ£ÿ®Ÿäÿ∂ / 100 ÿ¨ ÿ®ŸÜŸä"},
                           {"key": "flour", "emoji": "üçö", "cups": "ÿØŸÇŸäŸÇ: <span class='highlight critical'>ŸÉŸÖŸäÿ© ÿ£ŸÇŸÑ (~2 ¬º ŸÑŸÄ 2 ¬Ω ŸÉŸàÿ®)</span>", "grams": "<span class='highlight critical'>280-300 ÿ¨ÿ±ÿßŸÖ</span>" },
                           {"key": "leaveners", "emoji": "‚ú®", "cups": "ÿßŸÑÿ±ŸÅÿπ: 1 ŸÖ.ÿµ ÿ®ŸäŸÉŸÜÿ¨ ÿµŸàÿØÿß <span class='critical'>ŸÅŸÇÿ∑!</span>", "grams": "1 ŸÖ.ÿµ ÿµŸàÿØÿß <span class='critical'>ŸÅŸÇÿ∑!</span>" },
                           {"key": "extra", "emoji": "üíß", "cups": "ÿπÿ¥ÿßŸÜ ÿ£ÿ±ŸÇ (ÿßÿÆÿ™Ÿäÿßÿ±Ÿä): 1-2 ŸÖ.ŸÉ ÿ≠ŸÑŸäÿ®", "grams": "~15-30 ŸÖŸÑ"},
                           {"key": "choco", "emoji": "üç´", "cups": "ÿ¥ŸàŸÉŸàŸÑÿßÿ™ÿ©: ~1 ¬Ω ŸÉŸàÿ®", "grams": "~255 ÿ¨ÿ±ÿßŸÖ" },
                           {"key": "eggs", "emoji": "ü•ö", "cups": "ÿ®Ÿäÿ∂: 2 ŸÉÿ®Ÿäÿ±", "grams": "2 ŸÉÿ®Ÿäÿ±" },
                           {"key": "vanilla", "emoji": "üè∫", "cups": "ŸÅÿßŸÜŸäŸÑŸäÿß: 2 ŸÖ.ÿµ", "grams": "2 ŸÖ.ÿµ (10 ŸÖŸÑ)" },
                           {"key": "salt", "emoji": "üßÇ", "cups": "ŸÖŸÑÿ≠: 1 ŸÖ.ÿµ ÿÆÿ¥ŸÜ", "grams": "~5-6 ÿ¨ÿ±ÿßŸÖ ÿÆÿ¥ŸÜ" },
                           {"key": "milkpowder", "emoji": "ü•õ", "cups": "ÿßÿÆÿ™Ÿäÿßÿ±Ÿä: 3-4 ŸÖ.ŸÉ ÿ®ŸàÿØÿ±ÿ© ŸÑÿ®ŸÜ ŸÖÿ≠ŸÖÿµÿ©", "grams": "20-25 ÿ¨ÿ±ÿßŸÖ"}
                      ], // ** END AR Thin Ingredients **
                      steps: [ "ÿ¨Ÿáÿ≤ ÿßŸÑÿ¨ÿßŸÅ: ÿßÿÆŸÑÿ∑ ÿßŸÑÿØŸÇŸäŸÇ (ŸÇŸÑŸäŸÑ!)ÿå ÿ®ŸäŸÉŸÜÿ¨ ÿµŸàÿØÿß <span class='critical'>(ÿ®ÿ≥!)</span>ÿå ŸÖŸÑÿ≠ÿå ÿ®ŸàÿØÿ±ÿ© ŸÑÿ®ŸÜ.","ÿ™ÿ£ŸÉÿØ ÿßŸÑÿ≤ÿ®ÿØÿ© <span class='critical'>ÿØÿßŸÅŸäÿ© ÿ≥ÿßÿ¶ŸÑÿ©</span> (ŸÖÿ¥ ÿ≥ÿÆŸÜÿ©).","ŸÅŸä ÿ∑ÿ®ŸÇÿå <span class='highlight'>ÿßÿÆŸÅŸÇ</span> ÿßŸÑÿ≤ÿ®ÿØÿ© ŸàÿßŸÑÿ≥ŸÉÿ± (ÿßŸÑÿ£ÿ®Ÿäÿ∂ ÿ£ŸÉÿ™ÿ±!).","ÿ∂ŸäŸÅ ÿßŸÑÿ®Ÿäÿ∂ Ÿàÿßÿ≠ÿØÿ© Ÿàÿßÿ≠ÿØÿ©ÿå ÿ´ŸÖ ÿßŸÑŸÅÿßŸÜŸäŸÑŸäÿß (+ ÿßŸÑÿ≠ŸÑŸäÿ® ŸÑŸà ÿ£ÿ∂ŸÅÿ™).","ÿ∂ŸäŸÅ ÿßŸÑÿ¨ÿßŸÅ ÿπŸÑŸâ ÿßŸÑÿ≥ÿßŸäŸÑÿå ÿßÿÆŸÑÿ∑ <span class='critical'>Ÿäÿß ÿØŸàÿ®</span> Ÿäÿ™ÿ¨ÿßŸÜÿ≥.","ŸÇŸÑŸëÿ® ÿßŸÑÿ¥ŸàŸÉŸàŸÑÿßÿ™ÿ©.","<span class='critical'>ŸÖŸÅŸäÿ¥ ÿ™ÿ®ÿ±ŸäÿØ!</span>","ÿ≥ÿÆŸÜ ÿßŸÑŸÅÿ±ŸÜ <span class='highlight'>175¬∞ŸÖ</span>. ÿ¨Ÿáÿ≤ ÿßŸÑÿµŸàÿßŸÜŸä.","ŸÉŸàÿ±Ÿáÿß ŸÉŸàÿ± <span class='highlight'>ÿµÿ∫Ÿäÿ±ÿ© (~1.5-2 ŸÖ)</span>. ŸÖÿ≥ÿßŸÅÿßÿ™ ÿ®ÿπŸäÿØÿ©! ÿ®ÿ∑ÿ∑Ÿáÿß ÿ¥ŸàŸäÿ© ŸÑŸà ÿπÿßŸäÿ≤.","ÿßÿÆÿ®ÿ≤ <span class='highlight'>12-15 ÿØŸÇŸäŸÇÿ©</span> ŸÑÿ≠ÿØ ÿßŸÑŸÑŸàŸÜ ÿßŸÑÿØŸáÿ®Ÿä ÿßŸÑŸÉÿßŸÖŸÑ.","ÿ≥Ÿäÿ®Ÿáÿß ÿ™ÿ®ÿ±ÿØ ÿπ ÿßŸÑÿµŸäŸÜŸäÿ© ÿØŸÇŸäŸÇÿ™ŸäŸÜ ŸàÿßŸÜŸÇŸÑŸáÿß ŸÅŸàÿ±ÿßŸã. ÿ®ÿ™ŸÇÿ±ŸÖÿ¥ ŸÑŸÖÿß ÿ™ÿ®ÿ±ÿØ! ‚ú®" ],
                      customScienceNote: "ÿßŸÑÿ≤ÿ®ÿØÿ© ÿßŸÑÿØÿßŸÅÿ¶ÿ© ÿßŸÑÿ≥ÿßÿ¶ŸÑÿ© ÿ™ÿ∞Ÿàÿ® ÿ≥ÿ±ŸäÿπŸãÿß = ÿßŸÜÿ™ÿ¥ÿßÿ±! ÿßŸÑÿØŸÇŸäŸÇ ÿßŸÑÿ£ŸÇŸÑ = ŸáŸäŸÉŸÑ ÿ£ÿ∂ÿπŸÅ Ÿäÿ≥ŸÖÿ≠ ÿ®ÿßŸÑÿßŸÜÿ™ÿ¥ÿßÿ±. ÿßŸÑÿ≥ŸÉÿ± ÿßŸÑÿ£ÿ®Ÿäÿ∂ Ÿäÿ™ŸÉÿ±ŸÖŸÑ ŸÑŸÑŸÇÿ±ŸÖÿ¥ÿ©. ÿπÿØŸÖ Ÿàÿ¨ŸàÿØ ÿ®ŸäŸÉŸÜÿ¨ ÿ®ŸàÿØÿ± = ŸÑÿß ŸäŸàÿ¨ÿØ ÿ±ŸÅÿπ ŸäÿπŸäŸÇ ÿßŸÑÿßŸÜÿ™ÿ¥ÿßÿ±."
                  } // ** END AR Thin **
              }, // ** END AR cookies **
              tips: [ // ** AR Tips START **
                  {"key": "tip1", "emoji": "üíé", "text": "ÿßŸÑÿ¨ŸàÿØÿ© ŸÖŸáŸÖÿ©: ÿßÿ≥ÿ™ÿÆÿØŸÖ ÿ¥ŸàŸÉŸàŸÑÿßÿ™ÿ© ŸÉŸàŸäÿ≥ÿ© (ÿ≤Ÿä ÿØÿ±Ÿàÿ®ÿ≥Ÿä!) ŸàŸÅÿßŸÜŸäŸÑÿß ÿ≠ŸÇŸäŸÇŸäÿ©."},
                  {"key": "tip2", "emoji": "‚öñÔ∏è", "text": "ÿßŸÑÿØŸÇŸäŸÇ: ÿßŸÖŸÑÿ£ ÿßŸÑŸÉŸàÿ® ÿ®ÿßŸÑŸÖŸÑÿπŸÇÿ© ŸÖÿ¥ ÿ™ÿ∫ÿ±ŸÅŸá (ÿ£Ÿà ÿßÿ≥ÿ™ÿÆÿØŸÖ ŸÖŸäÿ≤ÿßŸÜ ŸÑŸà ÿπÿßŸäÿ≤ ÿØŸÇÿ© ŸÖÿ™ŸÜÿßŸáŸäÿ©!)."},
                  {"key": "tip3", "emoji": "ü§´", "text": "ÿ≥ÿ± ÿßŸÑÿÆŸÑÿ∑: ŸÇŸÅ ŸÅŸàÿ± ŸÖÿß ÿßŸÑÿØŸÇŸäŸÇ ŸäÿÆÿ™ŸÅŸä. ÿßŸÑŸÉŸàŸÉŸäÿ≤ Ÿáÿ™ÿ®ŸÇŸâ ÿ∑ÿ±Ÿäÿ© Ÿàÿ≠ŸÑŸàÿ©."},
                  {"key": "tip4", "emoji": "üßä", "text": "ÿßŸÑÿ™ÿ®ÿ±ŸäÿØ ŸÖÿ¥ ŸÖÿ¨ÿ±ÿØ ÿßŸÜÿ™ÿ∏ÿßÿ±: ÿ®Ÿäÿ≠ÿ≥ŸÜ ÿßŸÑÿ∑ÿπŸÖ ŸàŸäÿ≠ÿßŸÅÿ∏ ÿπŸÑŸâ ÿßŸÑÿ¥ŸÉŸÑ."},
                  {"key": "tip5", "emoji": "ü•Ñ", "text": "ÿßÿ≥ÿ™ÿÆÿØŸÖ ŸÖÿπŸÑŸÇÿ© ÿ¢Ÿäÿ≥ ŸÉÿ±ŸäŸÖ ŸÑŸÉÿ±ÿßÿ™ ŸÖÿ™ÿ≥ÿßŸàŸäÿ©."},
                  {"key": "tip6", "emoji": "üßÇ", "text": "ÿ±ÿ¥ÿ© ŸÖŸÑÿ≠ ÿÆÿ¥ŸÜ ŸÇÿ®ŸÑ ÿßŸÑÿÆÿ®ÿ≤ ÿ®ÿ™ÿÆŸÑŸÑŸä ÿßŸÑÿ¥ŸàŸÉŸàŸÑÿßÿ™ÿ© ÿ™ÿ®ÿßŸÜ ÿ£ŸàÿπŸâ!"},
                  {"key": "tip7", "emoji": "üí•", "text": "ÿπÿßŸäÿ≤ ÿßŸÑŸÉŸàŸÉŸäÿ≤ ŸÅŸäŸáÿß ÿ™ÿ¨ÿßÿπŸäÿØ ÿ¥ŸÉŸÑŸáÿß ÿ≠ŸÑŸàÿü ÿßÿÆÿ®ÿ∑ ÿßŸÑÿµŸäŸÜŸäÿ© ÿπ ÿßŸÑÿ±ÿÆÿßŸÖÿ© ŸÖÿ±ÿ™ŸäŸÜ ÿ™ŸÑÿßÿ™ÿ© ÿ¢ÿÆÿ± ŸÉÿßŸÖ ÿØŸÇŸäŸÇÿ© ÿÆÿ®ÿ≤."},
                  {"key": "tip8", "emoji": "‚è≥", "text": "ÿßŸÑÿ™ÿ®ÿ±ŸäÿØ ÿπ ÿßŸÑÿµŸäŸÜŸäÿ© ÿ¨ÿ≤ÿ° ŸÖŸáŸÖ: ÿ≥Ÿäÿ® ÿßŸÑŸÉŸàŸÉŸäÿ≤ 5-10 ÿØŸÇÿßŸäŸÇ (ÿßŸÑÿ≥ŸÖŸäŸÉÿ© 10-15) ŸÇÿ®ŸÑ ŸÖÿß ÿ™ŸÜŸÇŸÑŸáÿß!"},
                  {"key": "tip9", "emoji": "‚ùÑÔ∏è", "text": "ŸÅÿ±ÿ≤ŸÜ ÿ≤Ÿä ÿßŸÑŸÖÿ≠ÿ™ÿ±ŸÅŸäŸÜ: ŸÉŸàÿ± ÿßŸÑÿπÿ¨ŸäŸÜ Ÿàÿ≠ÿ∑Ÿáÿß ÿπ ÿµŸäŸÜŸäÿ© ÿ™ÿ™ÿ¨ŸÖÿØÿå ÿ®ÿπÿØŸäŸÜ ÿ¥ŸäŸÑŸáÿß ŸÅŸä ŸÉŸäÿ≥. ÿßÿÆÿ®ÿ≤Ÿáÿß ŸÖÿ¨ŸÖÿØÿ©! ÿ≤ŸàÿØ ÿØŸÇŸäŸÇÿ© ÿ£Ÿà ÿßÿ™ŸÜŸäŸÜ ŸÑŸÑÿÆÿ®ÿ≤ (ŸàŸÇŸÑŸÑ ÿßŸÑÿ≠ÿ±ÿßÿ±ÿ© ÿ¥ŸàŸäÿ© 175¬∞ŸÖ). ŸÉŸàŸÉŸäÿ≤ ÿ∑ÿßÿ≤ÿ© ÿ£Ÿä ŸàŸÇÿ™! Ÿäÿßÿßÿßÿ≥!"},
                  {"key": "sci1", "emoji": "üî•", "text": "ÿßŸÑÿ≤ÿ®ÿØÿ© ÿßŸÑÿ®ŸÜŸäÿ© = ÿØŸáÿ® ÿßŸÑŸÜŸÉŸáÿßÿ™: ÿØŸä ÿÆŸÑÿßÿµÿ© ÿßŸÑŸÑÿ®ŸÜ ÿßŸÑŸÖÿ≠ŸÖÿµÿ© Ÿàÿ∑ÿπŸÖ ÿßŸÑŸÖŸÉÿ≥ÿ±ÿßÿ™ ÿßŸÑÿ≠ŸÑŸà ÿØŸá!"},
                  {"key": "sci2", "emoji": "ü•õ", "text": "ÿ®ŸàÿØÿ±ÿ© ÿßŸÑÿ≠ŸÑŸäÿ® ÿßŸÑŸÖÿ≠ŸÖÿµÿ© = ŸÜŸÉŸáÿ© ÿ≤ŸäÿßÿØÿ©: ÿπÿßŸäÿ≤ ÿ∑ÿπŸÖ ŸÖŸÉÿ±ŸÖŸÑ ŸàŸÖŸÉÿ≥ÿ±ÿßÿ™ ÿ≤ŸäÿßÿØÿ©ÿü ŸáŸà ÿØŸá."} // No comma
              ] // ** AR Tips END **
          } // ** END ar Object **
    }; // ** END contentData Object **

    // --- Functions ---

     // ** NEW/UPDATED: Get Ingredient text based on language and unit **
     function getUnitText(ingredient) {
         const langData = contentData[currentLanguage] || contentData.en;
         let unitKey = '';
         let textToShow = '';

         if (currentLanguage === 'en') {
             unitKey = currentUnitEn; // 'imperial' or 'metric'
             textToShow = ingredient[unitKey] || ingredient.imperial || ''; // Default to imperial if specific unit missing
         } else { // Arabic
             unitKey = currentUnitAr; // 'cups' or 'grams'
              // Construct Arabic text, prioritize selected unit, fallback to cups
              textToShow = ingredient[unitKey] || ingredient.cups || '';
               // If grams are selected and exist, maybe format differently? Keep simple for now.
               // if(currentUnitAr === 'grams' && ingredient.grams) {
              //     textToShow = `${ingredient.cups} (${ingredient.grams})`; // Example: Show both if available?
              // }
         }

         // Append extra text if it exists (like notes, critical spans)
         if (ingredient.text_extra) {
             textToShow += ingredient.text_extra;
         }

         // Handle cases where unit might not be defined but a simple 'text' field exists
         if(!textToShow && ingredient.text){
            textToShow = ingredient.text;
         }

         return textToShow || 'N/A'; // Fallback if truly empty
     }


     function updateTextContent() {
         // ...(Handles general UI text update & titles)...
         const elements = document.querySelectorAll('[data-lang-key]');
         const langData = contentData[currentLanguage] || contentData.en;

         elements.forEach(el => {
             const key = el.dataset.langKey;
             let text = langData[key] || ''; // Get base text

              // Exclude main title from this logic for now, handled separately
             if(key !== 'mainTitle') {
                 if (key === 'keyDifferencesTitle' && currentCookieType && langData.cookies && langData.cookies[currentCookieType]) {
                    text = `${langData.keyDifferencesTitle || ''} <span class='dynamic-cookie-name'>${langData.cookies[currentCookieType].name}!</span>`;
                 } else if (key === 'keyDifferencesTitle') {
                    text = langData.keyDifferencesTitle || 'üîë Key Differences Breakdown!'; // Reset
                } else if (key === 'recipeTitlePrefix' && currentCookieType && langData.cookies && langData.cookies[currentCookieType]) {
                    text += ` ${langData.cookies[currentCookieType].name}!`;
                }
            }

             if (el.innerHTML !== text) {
                 el.innerHTML = text;
             }
         });

          // --- Update MAIN title H1 ---
          let finalMainTitle = langData.mainTitleBase || "üç™ Omar's Cookie Guide! üç™";
          if (currentCookieType === 'thick' && langData.omarsFavSuffixEn && langData.omarsFavSuffixAr) {
                finalMainTitle += (currentLanguage === 'en' ? langData.omarsFavSuffixEn : langData.omarsFavSuffixAr);
            }
         mainTitleH1.innerHTML = finalMainTitle;
          // Update document title
         document.title = mainTitleH1.textContent || "Omar's Cookie Guide!"; // Use textContent for browser tab title

         // Update Tips
         tipsListContainer.innerHTML = '';
         if (langData.tips) {
             const fragment = document.createDocumentFragment();
             langData.tips.forEach(tip => {
                 const li = document.createElement('li');
                 li.dataset.emoji = tip.emoji;
                 li.innerHTML = tip.text;
                 fragment.appendChild(li);
             });
             tipsListContainer.appendChild(fragment);
         }
          // Show/hide correct unit toggles
          unitSelectorEn.style.display = (currentLanguage === 'en') ? 'block' : 'none';
          unitSelectorAr.style.display = (currentLanguage === 'ar') ? 'block' : 'none';
     }


     function updateRecipeView() {
        // ... (Bubble logic removed) ...
         const langData = contentData[currentLanguage] || contentData.en;

         // Handle Placeholder state
         if (!currentCookieType || !langData.cookies || !langData.cookies[currentCookieType]) {
             recipeDetailsContainer.innerHTML = `<div class="placeholder">${langData.placeholderSelect || 'Select a cookie style above!'}</div>`;
             recipeDetailsContainer.className = 'recipe-container';
             keyDifferencesContainer.classList.remove('visible');
             cookieImageHeader.classList.remove('visible');
             easterEggContainer.style.display = 'none';
             easterEggContainer.classList.remove('visible');
             updateTextContent(); // Reset titles etc.
             return;
         }

         const recipe = langData.cookies[currentCookieType];
         recipeDetailsContainer.className = `recipe-container ${recipe.theme || ''}`;

        // Update Image
         const imageKey = recipe.imageSrcKey;
         const imagePath = IMAGE_PATHS[imageKey] || IMAGE_PATHS.comparison;
         selectedCookieImage.src = imagePath;
         selectedCookieImage.alt = `Omar's fantastic ${recipe.name || 'cookies'}`;
         cookieImageHeader.classList.add('visible'); // Show image header

         // Update Key Differences
         keyDifferencesContainer.classList.add('visible');
         butterMethodDesc.innerHTML = recipe.butterMethod || 'N/A';
         chillingMethodDesc.innerHTML = recipe.chillingMethod || 'N/A';
         otherNotesDesc.innerHTML = recipe.otherNotes || 'N/A';
         updateTextContent(); // Update dynamic titles

         // --- Build Recipe Content ---
         let ingredientsHtml = `<h4 class="list-header">${langData.ingredientsHeader || 'Ingredients:'}</h4><ul class="ingredient-list">`;
         if (recipe.ingredients) {
             recipe.ingredients.forEach(ing => {
                 // ** Uses getUnitText() now **
                 const ingredientText = getUnitText(ing); // Gets text based on current language AND selected unit
                 ingredientsHtml += `<li class="${ing.key || ''}" data-emoji="${ing.emoji || 'üç™'}">${ingredientText}</li>`;
             });
         }
         ingredientsHtml += '</ul>';

         let howToToastHtml = `<div class="how-to-toast"><h4>${langData.howToToastMilkPowderTitle || 'How to Toast?'}</h4><p>${langData.howToToastMilkPowder || 'Toast...'}</p></div>`;

         let stepsHtml = `<h4 class="list-header">${langData.stepsHeader || 'Steps:'}</h4>${howToToastHtml}<ol class="steps-list">`;
         if(recipe.steps){ recipe.steps.forEach(step => stepsHtml += `<li>${step}</li>`); }
         stepsHtml += '</ol>';

         // --- Integrate Science Note ---
         let scienceHtml = '';
         if (recipe.customScienceNote) {
             scienceHtml = `<div class="science-note"><h4>${langData.scienceHeader || 'Science!'}</h4><p>${recipe.customScienceNote}</p></div>`;
         }

         const prefix = langData.recipeTitlePrefix || 'Recipe for';
         recipeDetailsContainer.innerHTML = `<h3>${prefix} ${recipe.name || 'Cookies'}!</h3>${ingredientsHtml}${stepsHtml}${scienceHtml}`;


         // --- Easter Egg Logic --- (remains the same) ---
          const showEasterEgg = (currentCookieType === 'thick');
          const stuffedImagePath = IMAGE_PATHS.stuffed || '';
          stuffedCookieImage.src = stuffedImagePath;
          stuffedCookieImage.alt = langData.easterEggTitle || "Stuffed Cookies!";

          if (showEasterEgg) {
             easterEggContainer.style.display = 'block';
              requestAnimationFrame(() => { easterEggContainer.classList.add('visible'); });
           } else {
              easterEggContainer.classList.remove('visible');
              let hideTimeout = easterEggContainer._hideTimeout;
              if(hideTimeout) clearTimeout(hideTimeout);
              if (easterEggContainer.style.display !== 'none') {
                   easterEggContainer._hideTimeout = setTimeout(() => {
                        if (!easterEggContainer.classList.contains('visible')) { easterEggContainer.style.display = 'none'; }
                   }, 700);
              }
          }
     }

      function switchLanguage(lang) {
          currentLanguage = contentData[lang] ? lang : 'en';
          body.dir = (currentLanguage === 'ar') ? 'rtl' : 'ltr';
          langButtons.forEach(btn => btn.classList.toggle('active', btn.dataset.lang === currentLanguage));
          updateTextContent(); // Includes showing/hiding unit toggles
          updateRecipeView(); // Updates based on *current* unit selections
      }

      // --- Event Listeners ---
      langButtons.forEach(button => button.addEventListener('click', (e) => { e.preventDefault(); switchLanguage(button.dataset.lang); }));
      typeSelectorButtons.forEach(button => {
          button.addEventListener('click', (e) => {
               e.preventDefault();
               const clickedType = button.dataset.type;
               if (currentCookieType !== clickedType) { // Update only if different
                   typeSelectorButtons.forEach(btn => btn.classList.remove('active'));
                   button.classList.add('active');
                   currentCookieType = clickedType;
                   updateTextContent(); // Includes updating H1 title for fav
                   updateRecipeView(); // Renders new recipe
               }
           });
      });

     // ** Combined Unit Toggle Listeners **
     [...unitButtonsEn, ...unitButtonsAr].forEach(button => {
         button.addEventListener('click', (e) => {
             e.preventDefault();
             const lang = button.dataset.lang;
             const unitType = button.dataset.unitType;

             if (lang === 'en') {
                 currentUnitEn = unitType;
                 unitButtonsEn.forEach(btn => btn.classList.remove('active'));
             } else { // lang === 'ar'
                 currentUnitAr = unitType;
                 unitButtonsAr.forEach(btn => btn.classList.remove('active'));
             }
             button.classList.add('active'); // Activate clicked button

             if (currentCookieType && currentLanguage === lang) {
                  // Only refresh recipe if a cookie is showing AND the toggle matches the current language
                  updateRecipeView();
              }
         });
     });


     // --- Initial Setup ---
     switchLanguage(currentLanguage); // Set lang, dir, update text, show correct unit toggle
     // updateRecipeView called inside switchLanguage handles initial placeholder

     // Sections hidden by default until selection
     cookieImageHeader.classList.remove('visible');
     keyDifferencesContainer.classList.remove('visible');
     easterEggContainer.style.display = 'none';

     setTimeout(() => { body.classList.add('loaded'); }, 100);

 }); // End DOMContentLoaded
// ==== JAVASCRIPT LOGIC ENDS HERE ====
