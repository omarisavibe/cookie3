// ==== JAVASCRIPT LOGIC STARTS HERE ====
document.addEventListener('DOMContentLoaded', () => {
    console.log("DOM Content Loaded - Initializing Cookie Guide V2");

    // --- DOM Elements ---
    const body = document.body;
    const langButtons = document.querySelectorAll('.lang-btn');
    const typeSelectorButtons = document.querySelectorAll('.selector-btn'); // Uses class .selector-btn
    const recipeDetailsContainer = document.getElementById('recipe-details');
    const keyDifferencesContainer = document.getElementById('key-differences');
    const butterMethodDesc = document.getElementById('butter-method-desc');
    const chillingMethodDesc = document.getElementById('chilling-method-desc');
    const otherNotesDesc = document.getElementById('other-notes-desc');
    const tipsListContainer = document.getElementById('tips-list');
    const keyDiffTitleElement = document.querySelector('#key-differences [data-lang-key="keyDifferencesTitle"]'); // Target title inside key diff
    const omarFavBubble = document.getElementById('omar-fav-bubble');
    const cookieImageHeader = document.getElementById('cookie-image-header');
    const selectedCookieImage = document.getElementById('selected-cookie-image');
    const easterEggContainer = document.getElementById('easter-egg-container');
    const stuffedCookieImage = document.getElementById('stuffed-cookie-image');
    const yieldInfoP = document.querySelector('.yield-info'); // Get yield element

    // --- State ---
    let currentLanguage = 'en'; // Default language
    let currentCookieType = null; // 'classic', 'thick', 'thin'

    // --- IMAGE PATHS (!! IMPORTANT: Use YOUR actual filenames here !!) ---
    const IMAGE_PATHS = {
        classic: 'classic.webp',
        thick: 'thick_and_gooey.webp',
        thin: 'thin_and_crispy.webp',
        stuffed: 'stuffed_cookie.webp' // Make sure you have this image
        // 'comparison' key seems unused in this version's logic
    };

    // --- Content Data Store (Using the structure you provided) ---
    const contentData = {
         en: {
             // UI Text
             mainTitle: "<span class='emoji'>üç™</span> Omar's Insanely Good Cookie Guide! <span class='emoji'>üç™</span>",
             yieldInfo: "Whips up about 18-24 cookies üç™", // Default yield, can be updated if recipes vary
             chooseStyle: "Alright, Cookie Boss! Pick Your Poison (aka Style!):",
             typeClassic: "Classic: The Crowd-Pleaser",
             typeThick: "Thick & Gooey: The Big Softie",
             typeThin: "Thin & Crispy: The Snapper",
             omarsFav: "Omar's Favorite! üòâ",
             keyDifferencesTitle: "üîë Key Differences Breakdown!", // Base title, name appended by JS
             butterTitle: "Butter & Mixing Mojo",
             chillingTitle: "To Chill or Not to Chill?",
             otherNotesTitle: "Quick Cheat Sheet",
             placeholderSelect: "üëà Waiting for your command! Click a cookie style above... Let's bake something amazing! ‚ú®",
             tipsTitle: "<span class='emoji'>üí°</span> Omar's Top Secret Tips & Brainy Bits! <span class='emoji'>üî¨</span>",
             recipeTitlePrefix: "Alright, let's bake some",
             ingredientsHeader: "Grab This Stuff:",
             stepsHeader: "Let's Do This! Your Steps:",
             howToToastMilkPowderTitle: "ü§î So, How *Do* You Toast Milk Powder?",
             howToToastMilkPowder: "Super easy! Spread 3-4 Tbsp milk powder (the regular kind!) in a <span class='highlight'>dry skillet</span> (no oil!). Put it on <span class='highlight'>LOW heat</span> and <span class='critical'>STIR CONSTANTLY</span>. Seriously, don't even blink. It'll start smelling nutty and turn a light golden brown in 3-5 minutes. Whip it off the heat IMMEDIATELY (it burns fast!) and let it cool completely. BOOM. Flavor unlocked.",
             scienceHeader: "<span class='emoji'>ü§ì</span> Nerd Corner: Why This Cookie is Awesome...",
             // Easter Egg Content (Ensure keys match HTML data-lang-key attributes)
             easterEggTitle: "üèÜ You Legend! You Picked GOOEY! üèÜ",
             easterEggIntro: "Okay, since you obviously have impeccable taste (like me!), ready to unlock a secret level?",
             easterEggIdea: "üî• STUFFED COOKIE TIME! üî•",
             easterEggDesc: "It's easy: Flatten a dough ball slightly, make a dent, stuff about <span class='highlight'>1 generous teaspoon</span> of Nutella OR... you guessed it... Pistachio Spread! Yep, because apparently everything needs pistachio now... but hey, it's actually <span class=\"critical\">SO GOOD</span> here! üòâ Seal it up, roll gently, bake as usual (maybe +1 min).",
             easterEggPistachioTip: "Trust the pistachio process. You won't regret it.",
             pistachioReco: "Best Spread I've Tried (Seriously):",
             pistachioLinkText: "Kamel El Sham Pistachio Cream", // Text for the link
             pistachioLinkHref: "https://www.amazon.eg/-/en/Kamel-El-Sham-Pistachio-Cream/dp/B0BCDJ211M/", // Actual link
             pistachioLinkSource: "(Amazon EG)",
             finalTag: "Hope you nail it! Show me your results & tag me!<br><a href=\"https://www.instagram.com/omarisavibe/\" target=\"_blank\" rel=\"noopener noreferrer\">@omarisavibe</a> on Insta! Yalla, bake happy! üòÑ",
             // Cookie Specific Data (NEW STRUCTURE)
             cookies: {
                 classic: {
                      name: "Classic Balanced Cookies",
                      theme: "classic-theme",
                      imageSrcKey: 'classic', // Maps to IMAGE_PATHS
                      butterMethod: "Use <span class='highlight'>COOOLED but LIQUID</span> Brown Butter. We're whisking, not creaming, folks. Keep it simple.",
                      chillingMethod: "<span class='highlight'>Chill RECOMMENDED:</span> Min 30 mins, up to 24 hrs fridge. Helps flavors deepen & prevents sad, flat cookies.",
                      otherNotes: "Flour: ~2 1/2 cups. <span class='highlight'>Yes</span> to 1/2 tsp Baking Powder.",
                      ingredients: [ // Use your ingredient structure
                          { emoji: 'üßà', text: 'Brown Butter: 1 cup, <span class="critical">COOLED but LIQUID</span> (vital!)' },
                          { emoji: 'üç¨', text: 'Sugars: 1 1/4 cups Light Brown Sugar (packed!), 1/2 cup White Granulated Sugar' },
                          { emoji: 'üçö', text: 'Flour: ~2 1/2 cups All-Purpose (spoon & level, don\'t scoop!)' },
                          { emoji: '‚ú®', text: 'Leaveners: 1 tsp Baking Soda + <span class="highlight">1/2 tsp Baking Powder</span>' },
                          { emoji: 'üç´', text: 'Chocolate: 1 1/2 to 2 cups! (Good quality chips or chunks. Try <a href="https://www.facebook.com/NAZEH.ElATAR/posts/%D8%B4%D9%8A%D9%83%D9%88%D9%84%D8%A7%D8%AA%D8%A9-%D8%AF%D8%B1%D9%88%D8%A8%D8%B3-%D9%87%D8%AA%D8%AE%D9%84%D9%8A-%D8%AD%D9%84%D9%88%D9%8A%D8%A7%D8%AA%D9%83-%D8%A3%D8%AD%D9%84%D9%89-%D9%88%D8%A3%D9%84%D8%B0-%D9%85%D8%AB%D8%A7%D9%84%D9%8A%D9%87-%D9%84%D9%84%D8%AA%D8%B2%D9%8A%D9%8A%D9%86-%D9%88%D8%B3%D9%87%D9%84%D9%87-%D8%A7%D9%84%D8%AA%D8%AD%D8%B6%D9%8A%D8%B1-%D9%88%D9%85%D8%AA%D9%88%D9%81%D8%B1%D9%87-%D8%A8%D8%B3%D8%B9%D8%B1/824531546557774/" target="_blank" rel="noopener noreferrer">Dropsy MILK Chocolate Chips</a> if you can find \'em - Egyptian & amazing!)'},
                          { emoji: 'ü•ö', text: 'Eggs: 2 Large (room temp if you\'re fancy)'},
                          { emoji: 'üè∫', text: 'Vanilla: 2 tsp Good Stuff (not imitation!)'},
                          { emoji: 'üßÇ', text: 'Salt: 1 tsp Kosher (or 1/2 tsp fine table salt)'},
                          { emoji: 'ü•õ', text: 'Optional Flavor Bomb: 3-4 Tbsp Toasted Milk Powder (See how above!)'}
                      ],
                       steps: [
                          'Prep your dry stuff: Whisk flour, baking soda, baking powder, salt, & toasted milk powder (if using). Set aside.',
                          'Make sure your glorious brown butter is <span class="critical">cool but still liquid</span>.',
                          'In a big bowl, <span class="highlight">WHISK</span> the liquid brown butter and both sugars together. Won\'t be fluffy, that\'s okay!',
                          'Whisk in eggs one by one, then the vanilla. Mix till just combined.',
                          'Dump the dry ingredients into the wet. Mix on low or by hand until *just* combined. Seriously, <span class="critical">STOP MIXING</span> when you don\'t see dry flour!',
                          'Gently fold in those lovely chocolate chips/chunks.',
                          'Cover the dough & <span class="highlight">CHILL</span> it! <span class="critical">Min 30 mins</span> fridge, longer (up to 24 hrs) is better. Patience pays off!',
                          'Oven time! Preheat to <span class="highlight">375¬∞F (190¬∞C)</span>. Line baking sheets with parchment (don\'t skip!).',
                          'Scoop dough (~2 Tbsp size balls). Space \'em out. Flaky salt sprinkle now if you wanna be extra.',
                          'Bake for <span class="highlight">10-12 minutes</span>. Edges should look set & golden, centers might still look a lil soft.',
                          'The hardest part: Let cookies cool on the baking sheet for 5-10 mins before moving to a wire rack. They need this time to firm up! Enjoy! üéâ'
                      ],
                       customScienceNote: "Using liquid butter here means less air gets trapped compared to creaming solid butter, leading to a denser, chewier cookie that spreads a bit more. The baking powder gives it just enough lift to keep it from being *too* flat. Chilling is key to control that spread and let flavors meld. Brown butter + toasted milk = Maillard reaction party for nutty depth!"
                  },
                  thick: {
                       name: "Thick & Gooey Giants",
                       theme: "thick-theme",
                       imageSrcKey: 'thick', // Maps to IMAGE_PATHS
                       butterMethod: "Use <span class='critical'>CHILLED SOLID</span> Brown Butter (like, fridge-cold but you can dent it). Fire up that mixer ‚Äì we're gonna <span class='critical'>CREAM</span> this with the sugars 'til light and fluffy!",
                       chillingMethod: "<span class='critical'>CHILLING IS MANDATORY!</span> Choice: <span class='highlight'>5 hours+ in the FREEZER</span> (speed run!) OR <span class='highlight'>24-72 hours in the FRIDGE</span> (peak flavor/texture!). Skipping this = sadness.",
                       otherNotes: "We need <span class='highlight'>MORE flour</span> (~2 1/2 to 2 3/4 cups). Keep the 1/2 tsp Baking Powder. <span class='highlight'>Optional but nice: 1-2 Tbsp Cornstarch</span> with the flour for ultimate tenderness.",
                       ingredients: [ // Use your ingredient structure
                          { emoji: 'üßà', text: 'Brown Butter: 1 cup, <span class="critical">CHILLED SOLID</span> (but slightly soft like clay)' },
                          { emoji: 'üç¨', text: 'Sugars: Go heavy on Brown? (Maybe 1 1/2 cups Brown / 1/4 cup White)' },
                          { emoji: 'üçö', text: 'Flour: <span class="highlight critical">MORE ~2 1/2 to 2 3/4 cups</span> All-Purpose' },
                          { emoji: '‚≠ê', text: 'Optional Softness Booster: 1-2 Tbsp Cornstarch'},
                          { emoji: '‚ú®', text: 'Leaveners: 1 tsp Baking Soda + <span class="highlight">1/2 tsp Baking Powder</span>' },
                          { emoji: 'üç´', text: 'Chocolate: <span class="highlight">Be generous! 2 cups or MORE</span> Chips/Chunks'},
                          { emoji: 'ü•ö', text: 'Eggs: 2 Large'},
                          { emoji: 'üè∫', text: 'Vanilla: 2 tsp Good Stuff'},
                          { emoji: 'üßÇ', text: 'Salt: 1 tsp Kosher (or 1/2 tsp table)'},
                          { emoji: 'ü•õ', text: 'Optional Flavor Bomb: 3-4 Tbsp Toasted Milk Powder'}
                      ],
                       steps: [
                          'Prep dry team: Whisk flour (the larger amount!), cornstarch (if using), soda, powder, salt, & toasted milk powder (if using). Set it aside.',
                          'Make absolutely sure your brown butter is <span class="critical">chilled solid</span> but scoopable.',
                          'In a stand mixer (or bowl with strong hand mixer!), <span class="critical">CREAM</span> the solid butter and sugars on medium-high speed for a good 3-5 minutes until significantly lighter and fluffier.',
                          'Beat in eggs one at a time on low, then the vanilla. Don\'t overdo it.',
                          'Slowly add the dry mix to the wet mix. Mix on low <span class="critical">ONLY until just combined</span>. Please, no tough cookies!',
                          'Fold in that glorious mountain of chocolate.',
                          '<span class="critical">COVER & CHILL (MUST DO!)</span>: EITHER <span class="highlight">5+ hrs FREEZER</span> OR <span class="highlight">24-72 hrs FRIDGE</span>. Longer = better flavor.',
                          'Finally! Preheat oven to <span class="highlight">375¬∞F (190¬∞C)</span>. Line baking sheets.',
                          'Scoop <span class="critical">LARGE dough balls</span> (~3-4 Tbsp). Roll \'em tall, <span class="highlight">don\'t flatten!</span> Flaky salt time!',
                          'Bake for <span class="highlight">12-15 minutes</span>. Edges set, but centers <span class="critical">WILL LOOK SOFT & UNDERDONE!</span> This is key for gooeyness. Pull them out!',
                          'Crucial Wait: Let cookies cool on the baking sheet for <span class="critical">10-15 solid minutes</span>. They finish baking here. THEN move to rack. Patience = Perfect Gooeyness! üòç'
                      ],
                      customScienceNote: "Creaming SOLID cold butter traps loads of air, giving lift. Extra flour provides structure. Chilling solidifies that fat like concrete (almost!) so it melts slower, preventing spread. The long chill lets flour fully hydrate and enzymes work flavor magic. Cornstarch? It slightly weakens gluten, adding incredible tenderness. It's a cookie miracle!"
                  },
                   thin: {
                       name: "Thin & Crispy Snappers",
                       theme: "thin-theme",
                       imageSrcKey: 'thin', // Maps to IMAGE_PATHS
                       butterMethod: "Use <span class='critical'>WARM LIQUID</span> Brown Butter. No workout needed, just a simple whisk with the sugars.",
                       chillingMethod: "<span class='critical'>NO CHILLING ALLOWED!</span> Seriously, skip it. We *want* maximum spread for crispiness.",
                       otherNotes: "Go light on flour (<span class='highlight'>~2 1/4 to 2 1/2 cups</span>). <span class='critical'>ZERO Baking Powder!</span> More <span class=\"highlight\">WHITE sugar</span> = crisp factor up! <span class='highlight'>Optional: 1-2 Tbsp Milk</span> for paper-thin results.",
                       ingredients: [ // Use your ingredient structure
                          { emoji: 'üßà', text: 'Brown Butter: 1 cup, <span class="critical">WARM & LIQUID</span>' },
                          { emoji: 'üç¨', text: 'Sugars: More WHITE! (e.g., 1 1/4 cups White / 1/2 cup Brown, or all White!)' },
                          { emoji: 'üçö', text: 'Flour: <span class="highlight critical">LESS ~2 1/4 to 2 1/2 cups</span> All-Purpose' },
                          { emoji: '‚ú®', text: 'Leaveners: 1 tsp Baking Soda <span class="critical">ONLY</span> (No Baking Powder!)' },
                          { emoji: 'üíß', text: 'Optional Thinness Helper: 1-2 Tbsp Milk (add w/ eggs)'},
                          { emoji: 'üç´', text: 'Chocolate: ~1 1/2 cups Chips (smaller ones work well here)'},
                          { emoji: 'ü•ö', text: 'Eggs: 2 Large'},
                          { emoji: 'üè∫', text: 'Vanilla: 2 tsp Good Stuff'},
                          { emoji: 'üßÇ', text: 'Salt: 1 tsp Kosher (or 1/2 tsp table)'},
                          { emoji: 'ü•õ', text: 'Optional Flavor Bomb: 3-4 Tbsp Toasted Milk Powder'}
                      ],
                      steps: [
                           'Dry stuff first: Whisk flour (less amount!), baking soda <span class="critical">(ONLY soda!)</span>, salt, & toasted milk powder (if using).',
                           'Make sure brown butter is <span class="critical">warm liquid</span> but not crazy hot (don\'t scramble eggs!).',
                           'In a bowl, <span class="highlight">WHISK</span> warm butter with sugars (<span class="highlight">higher white sugar ratio!</span>) until combined.',
                           'Whisk in eggs one at a time, then vanilla (and optional milk).',
                           'Add dry to wet, mix <span class="critical">just until combined</span>. Overmixing = bad.',
                           'Stir in the chocolate chips.',
                           '<span class="critical">NO CHILLING!</span> Straight to the oven!',
                           'Preheat oven to <span class="highlight">350¬∞F (175¬∞C)</span>. Line baking sheets.',
                           'Scoop <span class="highlight">smaller balls (~1.5-2 Tbsp)</span>. Space FAR apart! You can flatten them slightly if you want extra spread.',
                           'Bake <span class="highlight">12-15 minutes</span>, until nicely golden brown all over. We want crisp!',
                           'Let cool on sheet for just 2-5 mins, then move to wire rack. They get crispier as they cool completely. Snap! ‚ú®'
                       ],
                       customScienceNote: "Warm liquid butter = instant melt & spread in the oven! Less flour means less structure holding it back. More white sugar caramelizes beautifully for that snap. No baking powder means no extra lift to fight the spread. Baking soda mostly just encourages browning and a little reaction here. It's all about unleashing the spread!"
                  }
             },
              // Tips Data (Copied from previous functional version - Add keys if needed for structure)
             tips: [
                 { key: 'tip1', emoji: 'üíé', text: 'Quality Counts: Use good chocolate (like Dropsy!) & REAL vanilla.' },
                 { key: 'tip2', emoji: '‚öñÔ∏è', text: 'Spoon & Level Flour: Don\'t pack the measuring cup! (Or use a scale for ultra-precision, about 120-125g per cup if you must know!)' },
                 { key: 'tip3', emoji: 'ü§´', text: 'The Mixing Secret: Stop AS SOON as the flour disappears. Tender cookies thank you.' },
                 { key: 'tip4', emoji: 'üßä', text: 'Chill Isn\'t Just Waiting: It deepens flavor, controls spread & texture. Respect the chill (when needed!).' },
                 { key: 'tip5', emoji: 'ü•Ñ', text: 'Scoop Smart: Use a cookie scoop for evenly baked beauties.' },
                 { key: 'tip6', emoji: 'üßÇ', text: 'Flaky Salt Finish: A little sprinkle *before* baking makes chocolate pop! So fancy.' },
                 { key: 'tip7', emoji: 'üí•', text: 'Want Ripples? Try Pan Banging! Firmly bang the sheet on the counter 2-3 times during the last few mins of baking. Cool!' },
                 { key: 'tip8', emoji: '‚è≥', text: 'Cooling IS Part of Baking: Let cookies set on the hot pan for 5-10 mins (10-15 for Thick!) - vital!' },
                 { key: 'tip9', emoji: '‚ùÑÔ∏è', text: 'Freeze Like a Pro: Scoop dough balls onto a tray, freeze solid, then bag \'em. Bake straight from frozen! Just add 1-2 mins baking time (maybe lower temp slightly ~350F/175C). Fresh cookies ANYTIME! YES!' },
                 { key: 'sci1', emoji: 'üî•', text: 'Brown Butter = Flavor Gold: It\'s toasted milk solids & nutty goodness!' },
                 { key: 'sci2', emoji: 'ü•õ', text: 'Toasted Milk Powder = Extra Credit Flavor: More nutty, caramelly notes? Sign me up.' }
             ]
         },
         ar: { // ** Using the Arabic data from the previous complete script **
             mainTitle: "<span class='emoji'>üç™</span> ÿØŸÑŸäŸÑ ÿπŸÖÿ± ÿßŸÑÿ±ŸáŸäÿ® ŸÑŸÄ<span class='highlight'>ÿ£ÿ≠ŸÑŸâ ŸÉŸàŸÉŸäÿ≤</span>! <span class='emoji'>üç™</span>",
             yieldInfo: "ÿ®ÿ™ÿ∑ŸÑÿπ ÿ≠ŸàÿßŸÑŸä 18-24 ŸÉŸàŸÉŸä üç™",
             chooseStyle: "ŸäŸÑÿß Ÿäÿß ŸÉÿ®Ÿäÿ±ÿå ÿßÿÆÿ™ÿßÿ± ÿßŸÑŸÜŸàÿπ ÿßŸÑŸÑŸä ŸáŸäÿØŸÖÿ±ŸÜÿß (ŸäÿπŸÜŸä ÿßŸÑÿ¥ŸÉŸÑ!)",
             typeClassic: "ÿßŸÑŸÉŸÑÿßÿ≥ŸäŸÉŸä: ÿØŸá ÿ®ŸäŸÅÿ±ÿ≠ ÿßŸÑÿ¨ŸÖŸáŸàÿ±",
             typeThick: "ÿßŸÑÿ≥ŸÖŸäŸÉ ŸàÿßŸÑŸÑŸäŸëŸÜ: ÿØÿ®ŸÑÿ© Soft",
             typeThin: "ÿßŸÑÿ±ŸÅŸäÿπ ŸàÿßŸÑŸÖŸÇÿ±ŸÖÿ¥: ÿßŸÑŸÉŸàŸÉŸä ÿßŸÑŸÉÿ±ŸÜÿ¥",
             omarsFav: "ÿßŸÑÿßÿÆÿ™Ÿäÿßÿ± ÿßŸÑŸÖŸÅÿ∂ŸÑ ŸÑŸÄ ÿπŸÖÿ±! üòâ",
             keyDifferencesTitle: "üîë ÿßŸÑŸÅÿ±ŸàŸÇÿßÿ™ ÿßŸÑÿ£ÿ≥ÿßÿ≥Ÿäÿ© ÿ®ŸäŸÜ ÿßŸÑÿ£ŸÜŸàÿßÿπ!", // Base title
             butterTitle: "ÿßŸÑÿ≤ÿ®ÿØÿ© Ÿàÿ∑ÿ±ŸäŸÇÿ© ÿßŸÑÿÆŸÑÿ∑",
             chillingTitle: "ÿ™ÿ®ÿ±ŸäÿØ ÿßŸÑÿπÿ¨ŸäŸÜ ŸàŸÑÿß ŸÑÿ£ÿü",
             otherNotesTitle: "ŸÖŸÑÿ≠Ÿàÿ∏ÿßÿ™ ÿ≥ÿ±Ÿäÿπÿ©",
             placeholderSelect: "üëà ÿßŸÜÿ™ÿ∏ÿ± ÿ•ÿ¥ÿßÿ±ÿ™ŸÉ! ÿØŸàÿ≥ ÿπŸÑŸâ ÿ£Ÿä ÿ¥ŸÉŸÑ ŸÅŸàŸÇ... ÿ™ÿπÿßŸÑŸâ ŸÜÿÆÿ®ÿ≤ ÿ≠ÿßÿ¨ÿ© ÿ¨ÿßŸÖÿØÿ©! ‚ú®",
             tipsTitle: "<span class='emoji'>üí°</span> ŸÜÿµÿßŸäÿ≠ ÿπŸÖÿ± ÿßŸÑÿ≥ÿ±Ÿäÿ© Ÿàÿ≠ÿßÿ¨ÿßÿ™ ÿπŸÑŸÖŸäÿ© ÿ¨ÿßŸÖÿØÿ©! <span class='emoji'>üî¨</span>",
             recipeTitlePrefix: "ŸäŸÑÿß ŸÜÿÆÿ®ÿ≤",
             ingredientsHeader: "ÿßŸÑŸÖŸÉŸàŸÜÿßÿ™:",
             stepsHeader: "ÿßŸÑÿÆÿ∑Ÿàÿßÿ™:",
             howToToastMilkPowderTitle: "ü§î ÿ•ÿ≤ÿßŸä ŸÜÿ≠ŸÖÿ≥ ÿ®ŸàÿØÿ±ÿ© ÿßŸÑŸÑÿ®ŸÜÿü",
             howToToastMilkPowder: "ÿ≥ŸáŸÑÿ© ÿ£ŸàŸä! ÿßŸÜÿ¥ÿ± 3-4 ŸÖŸÑÿßÿπŸÇ ÿ®ŸàÿØÿ±ÿ© ŸÑÿ®ŸÜ (ÿπÿßÿØŸäÿ©) ŸÅŸä <span class='highlight'>ŸÖŸÇŸÑÿßÿ© ÿ¨ÿßŸÅÿ©</span> (ŸÖŸÜ ÿ∫Ÿäÿ± ÿ≤Ÿäÿ™!). ÿ¥ÿ∫ŸÑŸáÿß ÿπŸÑŸâ <span class='highlight'>ŸÜÿßÿ± ŸáÿßÿØŸäÿ©</span> Ÿà<span class='critical'>ŸÇŸÑŸëÿ® ÿ®ÿßÿ≥ÿ™ŸÖÿ±ÿßÿ±</span>. ÿ®ÿ¨ÿØ ŸÖÿ™ÿ∫ŸÖÿ∂ÿ¥ ÿπŸäŸÜŸÉ. Ÿáÿ™ÿ®ÿØÿ£ ÿ±Ÿäÿ≠ÿ™Ÿáÿß ÿ™ÿ∑ŸÑÿπ ŸàŸÖŸäÿ®ŸÇŸâ ŸÑŸàŸÜŸáÿß ÿØŸáÿ®Ÿä ŸÅÿßÿ™ÿ≠ÿßŸÜÿ© ŸÅŸä 3-5 ÿØŸÇÿßŸäŸÇ. ÿ¥ŸäŸÑŸáÿß ŸÖŸÜ ÿßŸÑŸÜÿßÿ± ŸÅŸàÿ±ÿßŸã (ÿπÿ¥ÿßŸÜ ÿ®ÿ™ÿ≠ÿ™ÿ±ŸÇ ÿ®ÿ≥ÿ±ÿπÿ©!) Ÿàÿßÿ™ÿ±ŸÉŸáÿß ÿ™ÿ®ÿ±ÿØ. Ÿäÿß ÿ≥ŸÑÿßŸÖ ÿπŸÑŸâ ÿßŸÑÿ∑ÿπŸÖ!",
             scienceHeader: "<span class='emoji'>ü§ì</span> ÿ≤ÿßŸàŸäÿ© ÿßŸÑŸÅŸáŸÖÿßŸÜ: ŸÑŸäŸá ÿßŸÑŸÉŸàŸÉŸäÿ≤ ÿØŸä ÿ¨ÿßŸÖÿØÿ©...", // Adjusted translation slightly
             easterEggTitle: "üèÜ Ÿäÿß ÿ®ÿ∑ŸÑ! ÿßÿÆÿ™ÿ±ÿ™ ÿßŸÑŸÜŸàÿπ ÿßŸÑÿ¨ŸàŸàŸä! üèÜ",
             easterEggIntro: "ÿ∑ÿ®ÿπŸãÿß ÿ•ÿ≠ŸÜÿß ÿπÿßÿ±ŸÅŸäŸÜ ÿ£ŸÜ ÿ∞ŸàŸÇŸÉ ÿ™ÿ≠ŸÅÿ© (ÿ≤ŸäŸä!)ÿå ÿ¨ÿßŸáÿ≤ ŸÑŸÑlevel ÿßŸÑÿ≥ÿ±Ÿäÿü",
             easterEggIdea: "üî• ŸàŸÇÿ™ ÿßŸÑŸÉŸàŸÉŸäÿ≤ ÿßŸÑŸÖÿ≠ÿ¥Ÿäÿ©! üî•", // Adjusted translation
             easterEggDesc: "ÿ≥ŸáŸÑÿ©: ÿßŸÅÿ±ÿØ ŸÉÿ±ÿ© ÿßŸÑÿπÿ¨ŸäŸÜ ÿ¥ŸàŸäÿ©ÿå ÿßÿπŸÖŸÑ ÿ≠ŸÅÿ±ÿ© ÿµÿ∫Ÿäÿ±ÿ©ÿå Ÿàÿ≠ÿ∑ ŸÅŸäŸáÿß <span class='highlight'>ŸÖŸÑÿπŸÇÿ© ÿµÿ∫Ÿäÿ±ÿ© ŸÖŸÑŸäÿßŸÜÿ©</span> ŸÜŸàÿ™ŸäŸÑÿß ÿ£Ÿà... ÿµÿ≠... ŸÖÿπÿ¨ŸàŸÜ ÿßŸÑŸÅÿ≥ÿ™ŸÇ! ÿ£ŸäŸàÿ©ÿå ŸÑÿ£ŸÜ ŸÉŸÑ ÿ≠ÿßÿ¨ÿ© ŸÖÿ≠ÿ™ÿßÿ¨ÿ© ŸÅÿ≥ÿ™ŸÇ ÿØŸÑŸàŸÇÿ™Ÿä... ŸÑŸÉŸÜ ÿ®ÿµÿ±ÿßÿ≠ÿ© ÿßŸÑÿ∑ÿπŸÖ <span class='critical'>ÿ¨ÿßŸÖÿØ ŸÇŸàŸä</span> ŸáŸÜÿß! üòâ ÿßÿ∫ŸÑŸÇŸáÿß ŸÉŸàŸäÿ≥ÿå ŸÉŸàÿ±Ÿáÿß ÿ®ÿßŸÑÿ±ÿßÿ≠ÿ©ÿå ŸàÿßÿÆÿ®ÿ≤Ÿáÿß ÿ≤Ÿä ÿßŸÑÿπÿßÿØŸä (ŸäŸÖŸÉŸÜ +1 ÿØŸÇŸäŸÇÿ©).", // Adjusted to teaspoon based on EN
             easterEggPistachioTip: "ÿ´ŸÇ ŸÅŸä ÿßŸÑŸÅÿ≥ÿ™ŸÇ. ŸÖÿ¥ Ÿáÿ™ŸÜÿØŸÖ.", // Adjusted translation
             pistachioReco: "ÿ£ÿ≠ŸÑŸâ ŸÖÿπÿ¨ŸàŸÜ ŸÅÿ≥ÿ™ŸÇ ÿ¨ÿ±ÿ®ÿ™Ÿá (ÿ®ÿ¨ÿØ):", // Adjusted translation
             pistachioLinkText: "ŸÉÿ±ŸäŸÖÿ© ÿßŸÑŸÅÿ≥ÿ™ŸÇ ŸÖŸÜ ŸÉÿßŸÖŸÑ ÿßŸÑÿ¥ÿßŸÖ", // Translated link text
             pistachioLinkHref: "https://www.amazon.eg/-/en/Kamel-El-Sham-Pistachio-Cream/dp/B0BCDJ211M/", // Keep same link
             pistachioLinkSource: "(ÿ£ŸÖÿßÿ≤ŸàŸÜ ŸÖÿµÿ±)",
             finalTag: "ÿ®ÿßŸÑÿ™ŸàŸÅŸäŸÇ! ÿµŸàÿ± ÿßŸÑŸÜÿ™Ÿäÿ¨ÿ© ŸàŸàÿ±ŸäŸáÿßŸÑŸä ŸàÿßÿπŸÖŸÑŸä ÿ™ÿßÿ¨!<br><a href=\"https://www.instagram.com/omarisavibe/\" target=\"_blank\" rel=\"noopener noreferrer\">@omarisavibe</a> ÿπŸÑŸâ ÿßŸÑÿßŸÜÿ≥ÿ™ÿ¨ÿ±ÿßŸÖ! ŸäŸÑÿßÿå ÿßÿÆÿ®ÿ≤Ÿàÿß ŸàÿßŸÜÿ™Ÿàÿß ŸÖÿ®ÿ≥Ÿàÿ∑ŸäŸÜ! üòÑ", // Adjusted phrasing
              cookies: { // NESTED COOKIE DATA FOR ARABIC
                 classic: {
                     name: "ÿßŸÑŸÉŸàŸÉŸäÿ≤ ÿßŸÑŸÉŸÑÿßÿ≥ŸäŸÉŸä ÿßŸÑŸÖÿ™Ÿàÿßÿ≤ŸÜ",
                     theme: "classic-theme",
                     imageSrcKey: 'classic',
                     butterMethod: "ÿßÿ≥ÿ™ÿÆÿØŸÖ <span class='highlight'>ÿ≤ÿ®ÿØÿ© ÿ®ŸÜŸäÿ© ÿ≥ÿßÿ¶ŸÑÿ© Ÿàÿ®ÿßÿ±ÿØÿ©</span>. ÿ®ŸÜÿÆŸÅŸÇ ŸÖÿ¥ ÿ®ŸÜÿ∂ÿ±ÿ®ÿå ÿÆŸÑŸäŸáÿß ÿ≥ŸáŸÑÿ©.",
                     chillingMethod: "<span class='highlight'>ÿßŸÑÿ™ÿ®ÿ±ŸäÿØ ŸÖŸÅÿ∂ŸÑ:</span> 30 ÿØŸÇŸäŸÇÿ© ŸÑŸÄ 24 ÿ≥ÿßÿπÿ© ŸÅŸä ÿßŸÑÿ™ŸÑÿßÿ¨ÿ©. ÿ®ŸäÿÆŸÑŸä ÿßŸÑÿ∑ÿπŸÖ ÿ£ÿπŸÖŸÇ ŸàŸäŸÖŸÜÿπ ÿßŸÑŸÉŸàŸÉŸä ŸÖŸÜ ÿßŸÑÿ™ÿ≥ÿ∑ÿ≠.", // Adjusted phrasing
                     otherNotes: "ÿßŸÑÿØŸÇŸäŸÇ: ~2 ¬Ω ŸÉŸàÿ®. <span class='highlight'>ÿßÿ≥ÿ™ÿÆÿØŸÖ</span> ¬Ω ŸÖŸÑÿπŸÇÿ© ÿ®ŸäŸÉŸÜÿ¨ ÿ®ÿßŸàÿØÿ±.", // Adjusted phrasing
                     ingredients: [
                         {"emoji": "üßà", "text": "ÿ≤ÿ®ÿØÿ© ÿ®ŸÜŸäÿ©: ŸÉŸàÿ® Ÿàÿßÿ≠ÿØÿå <span class='critical'>ÿ®ÿßÿ±ÿØÿ© ŸàŸÑŸÉŸÜ ÿ≥ÿßÿ¶ŸÑÿ©</span> (ŸÖŸáŸÖ!)"},
                         {"emoji": "üç¨", "text": "ÿ≥ŸÉÿ±: 1 ¬º ŸÉŸàÿ® ÿ≥ŸÉÿ± ÿ®ŸÜŸä ŸÅÿßÿ™ÿ≠ (ŸÖŸÉÿ®Ÿàÿ≥!)ÿå ¬Ω ŸÉŸàÿ® ÿ≥ŸÉÿ± ÿ£ÿ®Ÿäÿ∂ ÿ≠ÿ®Ÿäÿ®ÿßÿ™"},
                         {"emoji": "üçö", "text": "ÿØŸÇŸäŸÇ: ~2 ¬Ω ŸÉŸàÿ® ÿØŸÇŸäŸÇ ŸÑÿ¨ŸÖŸäÿπ ÿßŸÑÿ£ÿ∫ÿ±ÿßÿ∂ (ÿ®ÿßŸÑŸÖŸÑÿπŸÇÿ© ŸàŸÖŸÖÿ≥Ÿàÿ≠ÿå ŸÖÿ¥ ŸÖÿ∫ÿ±ŸàŸÅ!)"},
                         {"emoji": "‚ú®", "text": "ŸÖŸàÿßÿØ ÿ±ÿßŸÅÿπÿ©: 1 ŸÖŸÑÿπŸÇÿ© ÿµÿ∫Ÿäÿ±ÿ© ÿ®ŸäŸÉŸÜÿ¨ ÿµŸàÿØÿß + <span class='highlight'>¬Ω ŸÖŸÑÿπŸÇÿ© ÿµÿ∫Ÿäÿ±ÿ© ÿ®ŸäŸÉŸÜÿ¨ ÿ®ÿßŸàÿØÿ±</span>"},
                         {"emoji": "üç´", "text": "ÿ¥ŸàŸÉŸàŸÑÿßÿ™ÿ©: 1 ¬Ω ŸÑŸÄ 2 ŸÉŸàÿ®! (ÿ¥Ÿäÿ®ÿ≥ ÿ£Ÿà ŸÇÿ∑ÿπ ŸÜŸàÿπŸäÿ© ÿ¨ŸäÿØÿ©. ÿ¨ÿ±ÿ® <a href='https://www.facebook.com/NAZEH.ElATAR/posts/%D8%B4%D9%8A%D9%83%D9%88%D9%84%D8%A7%D8%AA%D8%A9-%D8%AF%D8%B1%D9%88%D8%A8%D8%B3-%D9%87%D8%AA%D8%AE%D9%84%D9%8A-%D8%AD%D9%84%D9%88%D9%8A%D8%A7%D8%AA%D9%83-%D8%A3%D8%AD%D9%84%D9%89-%D9%88%D8%A3%D9%84%D8%B0-%D9%85%D8%AB%D8%A7%D9%84%D9%8A%D9%87-%D9%84%D9%84%D8%AA%D8%B2%D9%8A%D9%8A%D9%86-%D9%88%D8%B3%D9%87%D9%84%D9%87-%D8%A7%D9%84%D8%AA%D8%AD%D8%B6%D9%8A%D8%B1-%D9%88%D9%85%D8%AA%D9%88%D9%81%D8%B1%D9%87-%D8%A8%D8%B3%D8%B9%D8%B1/824531546557774/' target='_blank' rel='noopener noreferrer'>ÿ¥Ÿäÿ®ÿ≥ ÿØÿ±Ÿàÿ®ÿ≥Ÿä ÿ®ÿßŸÑÿ≠ŸÑŸäÿ®</a> ŸÑŸà ŸÑŸÇŸäÿ™Ÿáÿß - ŸÖÿµÿ±Ÿäÿ© Ÿàÿ™ÿ≠ŸÅÿ©!)"},
                         {"emoji": "ü•ö", "text": "ÿ®Ÿäÿ∂: 2 ÿ®Ÿäÿ∂ÿ© ŸÉÿ®Ÿäÿ±ÿ© (ÿ®ÿ≠ÿ±ÿßÿ±ÿ© ÿßŸÑÿ∫ÿ±ŸÅÿ© ŸÑŸà ÿ®ÿ™ÿ≠ÿ® ÿßŸÑÿ¥ŸäÿßŸÉÿ©)"},
                         {"emoji": "üè∫", "text": "ŸÅÿßŸÜŸäŸÑŸäÿß: 2 ŸÖŸÑÿπŸÇÿ© ÿµÿ∫Ÿäÿ±ÿ© ŸÜŸàÿπ ŸÉŸàŸäÿ≥ (ŸÖÿ¥ ÿ™ŸÇŸÑŸäÿØ!)"},
                         {"emoji": "üßÇ", "text": "ŸÖŸÑÿ≠: 1 ŸÖŸÑÿπŸÇÿ© ÿµÿ∫Ÿäÿ±ÿ© ŸÖŸÑÿ≠ ŸÉŸàÿ¥ÿ± (ÿ£Ÿà ¬Ω ŸÖŸÑÿπŸÇÿ© ÿµÿ∫Ÿäÿ±ÿ© ŸÖŸÑÿ≠ ÿ∑ÿπÿßŸÖ ŸÜÿßÿπŸÖ)"},
                         {"emoji": "ü•õ", "text": "ŸÇŸÜÿ®ŸÑÿ© ŸÜŸÉŸáÿ© ÿßÿÆÿ™Ÿäÿßÿ±Ÿäÿ©: 3-4 ŸÖŸÑÿßÿπŸÇ ŸÉÿ®Ÿäÿ±ÿ© ÿ®ŸàÿØÿ±ÿ© ŸÑÿ®ŸÜ ŸÖÿ≠ŸÖÿµÿ© (ÿ¥ŸàŸÅ ÿßŸÑÿ∑ÿ±ŸäŸÇÿ© ŸÅŸàŸÇ!)"}
                     ],
                     steps: [
                         "ÿ¨Ÿáÿ≤ ÿßŸÑÿ¨ÿßŸÅ: ÿßÿÆŸÅŸÇ ÿßŸÑÿØŸÇŸäŸÇÿå ÿ®ŸäŸÉŸÜÿ¨ ÿµŸàÿØÿßÿå ÿ®ŸäŸÉŸÜÿ¨ ÿ®ÿßŸàÿØÿ±ÿå ŸÖŸÑÿ≠ÿå Ÿàÿ®ŸàÿØÿ±ÿ© ÿßŸÑŸÑÿ®ŸÜ (ŸÑŸà Ÿáÿ™ÿ≥ÿ™ÿÆÿØŸÖ). ÿ≥Ÿäÿ®Ÿá ÿπŸÑŸâ ÿ¨ŸÜÿ®.",
                         "ÿ™ÿ£ŸÉÿØ ÿ•ŸÜ ÿ≤ÿ®ÿØÿ™ŸÉ ÿßŸÑÿ®ŸÜŸäÿ© ÿßŸÑÿπÿ∏ŸäŸÖÿ© <span class='critical'>ÿ®ÿßÿ±ÿØÿ© ŸÑŸÉŸÜ ŸÑÿ≥ÿ© ÿ≥ÿßÿ¶ŸÑÿ©</span>.",
                         "ŸÅŸä ÿ∑ÿ®ŸÇ ŸÉÿ®Ÿäÿ±ÿå <span class='highlight'>ÿßÿÆŸÅŸÇ ÿ®ÿßŸÑÿ≥ŸÑŸÉ</span> ÿßŸÑÿ≤ÿ®ÿØÿ© ÿßŸÑÿ≥ÿßÿ¶ŸÑÿ© ŸàÿßŸÑÿ≥ŸÉÿ±ŸäŸÜ ŸÖÿπ ÿ®ÿπÿ∂. ŸÖÿ¥ Ÿáÿ™ÿ®ŸÇŸâ Ÿáÿ¥ÿ©ÿå ÿπÿßÿØŸä!",
                         "ÿßÿÆŸÅŸÇ ÿßŸÑÿ®Ÿäÿ∂ Ÿàÿßÿ≠ÿØÿ© Ÿàÿßÿ≠ÿØÿ©ÿå ÿ®ÿπÿØŸäŸÜ ÿßŸÑŸÅÿßŸÜŸäŸÑŸäÿß. ÿßÿÆŸÑÿ∑ Ÿäÿß ÿØŸàÿ® Ÿäÿ™ÿ¨ÿßŸÜÿ≥Ÿàÿß.",
                         "ŸÜÿ≤ŸÑ ÿßŸÑŸÖŸÉŸàŸÜÿßÿ™ ÿßŸÑÿ¨ÿßŸÅÿ© ÿπŸÑŸâ ÿßŸÑÿ≥ÿßÿ¶ŸÑÿ©. ÿßÿÆŸÑÿ∑ ÿπŸÑŸâ ÿ≥ÿ±ÿπÿ© Ÿàÿßÿ∑Ÿäÿ© ÿ£Ÿà ÿ®ÿ•ŸäÿØŸÉ ŸÑÿ≠ÿØ ŸÖÿß *Ÿäÿß ÿØŸàÿ®* ŸäÿÆÿ™ŸÑÿ∑Ÿàÿß. ÿ®ÿ¨ÿØÿå <span class='critical'>ŸàŸÇŸÅ ÿÆŸÑÿ∑</span> ÿ£ŸàŸÑ ŸÖÿß ÿ™ÿ¥ŸàŸÅÿ¥ ÿØŸÇŸäŸÇ ŸÜÿßÿ¥ŸÅ!",
                         "ŸÇŸÑÿ® ÿ®ÿßŸÑÿ±ÿßÿ≠ÿ© ŸÇÿ∑ÿπ/ÿ¥Ÿäÿ®ÿ≥ ÿßŸÑÿ¥ŸàŸÉŸàŸÑÿßÿ™ÿ© ÿßŸÑÿ≠ŸÑŸàÿ© ÿØŸä.",
                         "ÿ∫ÿ∑Ÿä ÿßŸÑÿπÿ¨ŸäŸÜÿ© Ÿà<span class='highlight'>ÿ®ÿ±ÿØŸáÿß</span>! <span class='critical'>ÿπŸÑŸâ ÿßŸÑÿ£ŸÇŸÑ 30 ÿØŸÇŸäŸÇÿ©</span> ŸÅŸä ÿßŸÑÿ™ŸÑÿßÿ¨ÿ©ÿå ŸàŸÑŸà ÿ£ŸÉÿ™ÿ± (ŸÑÿ≠ÿØ 24 ÿ≥ÿßÿπÿ©) ÿ£ÿ≠ÿ≥ŸÜ. ÿßŸÑÿµÿ®ÿ± ÿ≠ŸÑŸà!",
                         "ŸàŸÇÿ™ ÿßŸÑŸÅÿ±ŸÜ! ÿ≥ÿÆŸÜŸá ÿπŸÑŸâ <span class='highlight'>190¬∞ŸÖ (375¬∞ŸÅ)</span>. ÿßŸÅÿ±ÿ¥ ÿßŸÑÿµŸàÿßŸÜŸä ÿ®Ÿàÿ±ŸÇ ÿ≤ÿ®ÿØÿ© (ŸÖÿ™ŸÅŸàÿ™Ÿáÿßÿ¥!).",
                         "ŸÉŸàÿ± ÿßŸÑÿπÿ¨ŸäŸÜ (ŸÉÿ±ÿßÿ™ ÿ®ÿ≠ÿ¨ŸÖ ~2 ŸÖŸÑÿπŸÇÿ© ŸÉÿ®Ÿäÿ±ÿ©). ÿ≥Ÿäÿ® ŸÖÿ≥ÿßŸÅÿ© ÿ®ŸäŸÜŸáŸÖ. ÿ±ÿ¥ÿ© ŸÖŸÑÿ≠ ŸÇÿ¥ÿßÿ±Ÿä ÿØŸÑŸàŸÇÿ™Ÿä ŸÑŸà ÿπÿßŸäÿ≤ ÿ™ÿ®ŸÇŸâ ÿ±Ÿàÿ¥.",
                         "ÿßÿÆÿ®ÿ≤ ŸÑŸÖÿØÿ© <span class='highlight'>10-12 ÿØŸÇŸäŸÇÿ©</span>. ÿßŸÑÿ≠ÿ±ŸàŸÅ ÿßŸÑŸÖŸÅÿ±Ÿàÿ∂ ÿ™ÿ®ŸÇŸâ ÿ´ÿßÿ®ÿ™ÿ© ŸàÿØŸáÿ®Ÿäÿ©ÿå ŸàÿßŸÑŸÇŸÑÿ® ŸÖŸÖŸÉŸÜ Ÿäÿ®ÿßŸÜ ÿ∑ÿ±Ÿä ÿ¥ŸàŸäÿ©.",
                         "ÿ£ÿµÿπÿ® ÿ¨ÿ≤ÿ°: ÿ≥Ÿäÿ® ÿßŸÑŸÉŸàŸÉŸäÿ≤ ÿ™ÿ®ÿ±ÿØ ÿπŸÑŸâ ÿßŸÑÿµŸäŸÜŸäÿ© 5-10 ÿØŸÇÿßŸäŸÇ ŸÇÿ®ŸÑ ŸÖÿß ÿ™ŸÜŸÇŸÑŸáÿß ÿπŸÑŸâ ÿ¥ÿ®ŸÉÿ©. ŸÖÿ≠ÿ™ÿßÿ¨ŸäŸÜ ÿßŸÑŸàŸÇÿ™ ÿØŸá ÿπÿ¥ÿßŸÜ Ÿäÿ™ŸÖÿßÿ≥ŸÉŸàÿß! ÿßÿ≥ÿ™ŸÖÿ™ÿπ! üéâ"
                     ],
                     customScienceNote": "ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑÿ≤ÿ®ÿØÿ© ÿßŸÑÿ≥ÿßŸäŸÑÿ© ÿ®Ÿäÿ≠ÿ®ÿ≥ ŸáŸàÿß ÿ£ŸÇŸÑ ŸÖŸÇÿßÿ±ŸÜÿ© ÿ®ÿÆŸÅŸÇ ÿßŸÑÿ≤ÿ®ÿØÿ© ÿßŸÑÿ¨ÿßŸÖÿØÿ©ÿå ŸàÿØŸá ÿ®ŸäÿÆŸÑŸä ÿßŸÑŸÉŸàŸÉŸäÿ≤ ÿ£ŸÉÿ™ÿ± ŸÉÿ´ÿßŸÅÿ© ŸàŸÖÿ∂ÿ∫ÿßŸã Ÿàÿ®ÿ™ŸÅÿ±ÿ¥ ÿ¥ŸàŸäÿ©. ÿßŸÑÿ®ŸäŸÉŸÜÿ¨ ÿ®ÿßŸàÿØÿ± ÿ®ŸäÿØŸäŸáÿß Ÿäÿß ÿØŸàÿ® ŸÜŸÅÿÆÿ© ÿπÿ¥ÿßŸÜ ŸÖÿ™ŸÑÿ≤ŸÇÿ¥ ÿ£ŸàŸä. ÿßŸÑÿ™ÿ®ÿ±ŸäÿØ ÿ£ÿ≥ÿßÿ≥Ÿä ŸÑŸÑÿ™ÿ≠ŸÉŸÖ ŸÅŸä ÿßŸÑŸÅÿ±ÿ¥ÿ© ÿØŸä ŸàŸÑÿØŸÖÿ¨ ÿßŸÑŸÜŸÉŸáÿßÿ™. ÿ≤ÿ®ÿØÿ© ÿ®ŸÜŸäÿ© + ŸÑÿ®ŸÜ ŸÖÿ≠ŸÖÿµ = ÿ≠ŸÅŸÑÿ© ÿ™ŸÅÿßÿπŸÑ ŸÖŸäŸÑÿßÿ±ÿØ ŸÑÿπŸÖŸÇ ÿ∑ÿπŸÖ ÿßŸÑŸÖŸÉÿ≥ÿ±ÿßÿ™!"
                 },
                  thick: {
                      name: "ÿßŸÑŸÉŸàŸÉŸäÿ≤ ÿßŸÑÿ≥ŸÖŸäŸÉÿ© ŸàÿßŸÑÿ¨ŸàŸàŸä ÿßŸÑÿπŸÖŸÑÿßŸÇÿ©", // Kept Giants here
                      theme: "thick-theme",
                      imageSrcKey: 'thick',
                     butterMethod: "ÿßÿ≥ÿ™ÿÆÿØŸÖ <span class='critical'>ÿ≤ÿ®ÿØÿ© ÿ®ŸÜŸäÿ© ŸÖÿ¨ŸÖÿØÿ© ŸàÿµŸÑÿ®ÿ©</span> (ŸäÿπŸÜŸä ŸÖŸÜ ÿßŸÑÿ™ŸÑÿßÿ¨ÿ© ÿ®ÿ≥ ÿ™ÿπÿ±ŸÅ ÿ™ÿπŸÑŸÖ ŸÅŸäŸáÿß). ÿ¥ÿ∫ŸÑ ÿßŸÑÿπÿ¨ÿßŸÜ ‚Äì ÿ•ÿ≠ŸÜÿß ŸáŸÜ<span class='critical'>ÿÆŸÅŸÇ</span> ÿØŸä ŸÖÿπ ÿßŸÑÿ≥ŸÉÿ± ŸÑÿ≠ÿØ ŸÖÿß ÿ™ÿ®ŸÇŸâ ÿÆŸÅŸäŸÅÿ© ŸàŸáÿ¥ÿ©!", // Adjusted phrasing
                      chillingMethod: "<span class='critical'>ÿßŸÑÿ™ÿ®ÿ±ŸäÿØ ÿ•ÿ¨ÿ®ÿßÿßÿßÿßÿ±Ÿä!</span> ÿßÿÆÿ™ÿßÿ±: <span class='highlight'>5 ÿ≥ÿßÿπÿßÿ™ ÿ£Ÿà ÿ£ŸÉÿ™ÿ± ŸÅŸä ÿßŸÑŸÅÿ±Ÿäÿ≤ÿ±</span> (ŸÑŸà ŸÖÿ≥ÿ™ÿπÿ¨ŸÑ!) ÿ£Ÿà <span class='highlight'>24-72 ÿ≥ÿßÿπÿ© ŸÅŸä ÿßŸÑÿ™ŸÑÿßÿ¨ÿ©</span> (ŸÇŸÖÿ© ÿßŸÑÿ∑ÿπŸÖ ŸàÿßŸÑŸÇŸàÿßŸÖ!). ŸÑŸà ŸÅŸàÿ™ÿ™ ÿßŸÑÿÆÿ∑Ÿàÿ© ÿØŸä = ÿ≤ÿπŸÑ.",
                      otherNotes: "ŸÖÿ≠ÿ™ÿßÿ¨ŸäŸÜ <span class='highlight'>ÿØŸÇŸäŸÇ ÿ£ŸÉÿ™ÿ±</span> (~2 ¬Ω ŸÑŸÄ 2 ¬æ ŸÉŸàÿ®). ÿÆŸÑŸä ŸÖÿπÿßŸÉ ÿßŸÑŸÄ ¬Ω ŸÖŸÑÿπŸÇÿ© ÿ®ŸäŸÉŸÜÿ¨ ÿ®ÿßŸàÿØÿ±. <span class='highlight'>ÿßÿÆÿ™Ÿäÿßÿ±Ÿä ÿ®ÿ≥ ÿ≠ŸÑŸà: 1-2 ŸÖŸÑÿπŸÇÿ© ŸÉÿ®Ÿäÿ±ÿ© ŸÜÿ¥ÿß</span> ŸÖÿπ ÿßŸÑÿØŸÇŸäŸÇ ŸÑŸÑÿ∑ÿ±ÿßŸàÿ© ÿßŸÑŸÇÿµŸàŸâ.",
                      ingredients: [
                          {"emoji": "üßà", "text": "ÿ≤ÿ®ÿØÿ© ÿ®ŸÜŸäÿ©: ŸÉŸàÿ® Ÿàÿßÿ≠ÿØÿå <span class='critical'>ŸÖÿ¨ŸÖÿØÿ© ŸàÿµŸÑÿ®ÿ© (ÿ®ÿ≥ ŸÇÿßÿ®ŸÑÿ© ŸÑŸÑÿ∫ÿ±ŸÅ)</span>"},
                          {"emoji": "üç¨", "text": "ÿ≥ŸÉÿ±: ŸÜÿ≤ŸàÿØ ÿßŸÑÿ®ŸÜŸäÿü (ŸÖÿ´ŸÑÿß 1 ¬Ω ŸÉŸàÿ® ÿ®ŸÜŸä / ¬º ŸÉŸàÿ® ÿ£ÿ®Ÿäÿ∂)"},
                          {"emoji": "üçö", "text": "ÿØŸÇŸäŸÇ: <span class='highlight critical'>ÿ£ŸÉÿ™ÿ± ~2 ¬Ω ŸÑŸÄ 2 ¬æ ŸÉŸàÿ®</span> ÿØŸÇŸäŸÇ ŸÑÿ¨ŸÖŸäÿπ ÿßŸÑÿ£ÿ∫ÿ±ÿßÿ∂"},
                          {"emoji": "‚≠ê", "text": "ŸÖÿπÿ≤ÿ≤ ÿ∑ÿ±ÿßŸàÿ© ÿßÿÆÿ™Ÿäÿßÿ±Ÿä: 1-2 ŸÖŸÑÿπŸÇÿ© ŸÉÿ®Ÿäÿ±ÿ© ŸÜÿ¥ÿß"},
                          {"emoji": "‚ú®", "text": "ŸÖŸàÿßÿØ ÿ±ÿßŸÅÿπÿ©: 1 ŸÖŸÑÿπŸÇÿ© ÿµÿ∫Ÿäÿ±ÿ© ÿ®ŸäŸÉŸÜÿ¨ ÿµŸàÿØÿß + <span class='highlight'>¬Ω ŸÖŸÑÿπŸÇÿ© ÿµÿ∫Ÿäÿ±ÿ© ÿ®ŸäŸÉŸÜÿ¨ ÿ®ÿßŸàÿØÿ±</span>"},
                          {"emoji": "üç´", "text": "ÿ¥ŸàŸÉŸàŸÑÿßÿ™ÿ©: <span class='highlight'>ÿÆŸÑŸäŸÉ ŸÉÿ±ŸäŸÖ! 2 ŸÉŸàÿ® ÿ£Ÿà ÿ£ŸÉÿ™ÿ±</span> ÿ¥Ÿäÿ®ÿ≥/ŸÇÿ∑ÿπ"},
                          {"emoji": "ü•ö", "text": "ÿ®Ÿäÿ∂: 2 ÿ®Ÿäÿ∂ÿ© ŸÉÿ®Ÿäÿ±ÿ©"},
                          {"emoji": "üè∫", "text": "ŸÅÿßŸÜŸäŸÑŸäÿß: 2 ŸÖŸÑÿπŸÇÿ© ÿµÿ∫Ÿäÿ±ÿ© ŸÜŸàÿπ ŸÉŸàŸäÿ≥"},
                          {"emoji": "üßÇ", "text": "ŸÖŸÑÿ≠: 1 ŸÖŸÑÿπŸÇÿ© ÿµÿ∫Ÿäÿ±ÿ© ŸÖŸÑÿ≠ ŸÉŸàÿ¥ÿ± (ÿ£Ÿà ¬Ω ŸÖŸÑÿπŸÇÿ© ÿµÿ∫Ÿäÿ±ÿ© ŸÖŸÑÿ≠ ÿ∑ÿπÿßŸÖ)"},
                          {"emoji": "ü•õ", "text": "ŸÇŸÜÿ®ŸÑÿ© ŸÜŸÉŸáÿ© ÿßÿÆÿ™Ÿäÿßÿ±Ÿäÿ©: 3-4 ŸÖŸÑÿßÿπŸÇ ŸÉÿ®Ÿäÿ±ÿ© ÿ®ŸàÿØÿ±ÿ© ŸÑÿ®ŸÜ ŸÖÿ≠ŸÖÿµÿ©"}
                      ],
                      steps: [
                          "ÿ¨Ÿáÿ≤ ŸÅÿ±ŸäŸÇ ÿßŸÑÿ¨ÿßŸÅ: ÿßÿÆŸÅŸÇ ÿßŸÑÿØŸÇŸäŸÇ (ÿßŸÑŸÉŸÖŸäÿ© ÿßŸÑÿ£ŸÉÿ®ÿ±!)ÿå ÿßŸÑŸÜÿ¥ÿß (ŸÑŸà Ÿáÿ™ÿ≥ÿ™ÿÆÿØŸÖ)ÿå ÿßŸÑÿµŸàÿØÿßÿå ÿßŸÑÿ®ÿßŸàÿØÿ±ÿå ÿßŸÑŸÖŸÑÿ≠ÿå Ÿàÿ®ŸàÿØÿ±ÿ© ÿßŸÑŸÑÿ®ŸÜ ÿßŸÑŸÖÿ≠ŸÖÿµÿ© (ŸÑŸà Ÿáÿ™ÿ≥ÿ™ÿÆÿØŸÖ). ÿ≥Ÿäÿ®Ÿá ÿπŸÑŸâ ÿ¨ŸÜÿ®.",
                         "ÿßÿ™ÿ£ŸÉÿØ ŸÖŸÑŸäŸàŸÜ ŸÅŸä ÿßŸÑŸÖŸäÿ© ÿßŸÜ ÿ≤ÿ®ÿØÿ™ŸÉ ÿßŸÑÿ®ŸÜŸäÿ© <span class='critical'>ŸÖÿ¨ŸÖÿØÿ© ŸàÿµŸÑÿ®ÿ©</span> ÿ®ÿ≥ ÿ™ÿπÿ±ŸÅ ÿ™ÿ∫ÿ±ŸÅ ŸÖŸÜŸáÿß.",
                          "ŸÅŸä ÿßŸÑÿπÿ¨ÿßŸÜ (ÿ£Ÿà ÿ∑ÿ®ŸÇ ÿ®ŸÖÿ∂ÿ±ÿ® ŸÉŸáÿ±ÿ®ÿß ŸÇŸàŸä!)ÿå <span class='critical'>ÿßÿÆŸÅŸÇ</span> ÿßŸÑÿ≤ÿ®ÿØÿ© ÿßŸÑÿµŸÑÿ®ÿ© ŸàÿßŸÑÿ≥ŸÉÿ± ÿπŸÑŸâ ÿ≥ÿ±ÿπÿ© ŸÖÿ™Ÿàÿ≥ÿ∑ÿ©-ÿπÿßŸÑŸäÿ© ŸÑŸÖÿØÿ© ŸÖÿ≠ÿ™ÿ±ŸÖÿ© 3-5 ÿØŸÇÿßŸäŸÇ ŸÑÿ≠ÿØ ŸÖÿß ÿ™ÿ®ŸÇŸâ ÿ£ÿÆŸÅ ŸàŸáÿ¥ÿ© ÿ®ŸÅÿ±ŸÇ Ÿàÿßÿ∂ÿ≠.",
                          "ÿßÿÆŸÅŸÇ ÿßŸÑÿ®Ÿäÿ∂ Ÿàÿßÿ≠ÿØÿ© Ÿàÿßÿ≠ÿØÿ© ÿπŸÑŸâ ÿ≥ÿ±ÿπÿ© Ÿàÿßÿ∑Ÿäÿ©ÿå ÿ®ÿπÿØŸäŸÜ ÿßŸÑŸÅÿßŸÜŸäŸÑŸäÿß. ŸÖÿ™ÿ≤ŸàÿØÿ¥.",
                          "ÿ∂ŸäŸÅ ÿ®ÿßŸÑÿ™ÿØÿ±Ÿäÿ¨ <span class='highlight'>ÿßŸÑŸÉŸÖŸäÿ© ÿßŸÑÿ£ŸÉÿ®ÿ±</span> ŸÖŸÜ ÿßŸÑÿÆŸÑŸäÿ∑ ÿßŸÑÿ¨ÿßŸÅ ÿπŸÑŸâ ÿßŸÑÿÆŸÑŸäÿ∑ ÿßŸÑÿ≥ÿßŸäŸÑ. ÿßÿÆŸÑÿ∑ ÿπŸÑŸâ <span class='critical'>ÿ£ÿ®ÿ∑ÿ£ ÿ≥ÿ±ÿπÿ© Ÿäÿß ÿØŸàÿ® ŸÑÿ≠ÿØ ŸÖÿß Ÿäÿ™ÿ¨ÿßŸÜÿ≥Ÿàÿß</span>. ÿ£ÿ±ÿ¨ŸàŸÉÿå ŸÖÿ¥ ÿπÿßŸäÿ≤ŸäŸÜ ŸÉŸàŸÉŸäÿ≤ ŸÜÿßÿ¥ŸÅÿ©!",
                          "ŸÇŸÑÿ® ÿ¨ÿ®ŸÑ ÿßŸÑÿ¥ŸàŸÉŸàŸÑÿßÿ™ÿ© ÿßŸÑÿπÿ∏ŸäŸÖ ÿØŸá.",
                         "<span class='critical'>ÿ∫ÿ∑Ÿä Ÿàÿ®ÿ±ÿØ (ŸÑÿßÿ≤ŸÖ Ÿäÿ™ÿπŸÖŸÑ!)</span>: Ÿäÿß ÿ•ŸÖÿß <span class='highlight'>5+ ÿ≥ÿßÿπÿßÿ™ ŸÅÿ±Ÿäÿ≤ÿ±</span> ÿ£Ÿà <span class='highlight'>24-72 ÿ≥ÿßÿπÿ© ÿ™ŸÑÿßÿ¨ÿ©</span>. ŸÉŸÑ ŸÖÿß ÿßŸÑŸÖÿØÿ© ÿ™ÿ∑ŸàŸÑ = ÿßŸÑÿ∑ÿπŸÖ ÿ£ÿ≠ŸÑŸâ.",
                         "ÿ£ÿÆŸäÿ±ÿßŸã! ÿ≥ÿÆŸÜ ÿßŸÑŸÅÿ±ŸÜ ÿπŸÑŸâ <span class='highlight'>190¬∞ŸÖ (375¬∞ŸÅ)</span>. ÿßŸÅÿ±ÿ¥ ÿßŸÑÿµŸàÿßŸÜŸä.",
                         "ŸÉŸàÿ± <span class='critical'>ŸÉÿ±ÿßÿ™ ÿπÿ¨ŸäŸÜ ŸÉÿ®Ÿäÿ±ÿ©</span> (~3-4 ŸÖŸÑÿßÿπŸÇ ŸÉÿ®Ÿäÿ±ÿ©). ŸÉŸàÿ±Ÿáÿß ÿπÿßŸÑŸäÿ© ŸÑŸÅŸàŸÇÿå <span class='highlight'>ŸÖÿ™ŸÅÿ±ÿØŸáÿßÿ¥!</span> ŸàŸÇÿ™ ÿßŸÑŸÖŸÑÿ≠ ÿßŸÑŸÇÿ¥ÿßÿ±Ÿä!",
                         "ÿßÿÆÿ®ÿ≤ ŸÑŸÖÿØÿ© <span class='highlight'>12-15 ÿØŸÇŸäŸÇÿ©</span>. ÿßŸÑÿ≠ÿ±ŸàŸÅ Ÿáÿ™ÿ≥ÿ™ŸàŸäÿå ŸÑŸÉŸÜ ÿßŸÑŸÇŸÑÿ® <span class='critical'>ŸáŸäÿ®ÿßŸÜ ÿ∑ÿ±Ÿä ÿ£ŸàŸä ŸàŸÖÿ¥ ŸÖÿ≥ÿ™ŸàŸä!</span> ÿØŸá ÿ≥ÿ± ÿßŸÑÿ∑ÿ±ÿßŸàÿ© ŸàÿßŸÑÿ¨ŸàŸàŸä. ÿ∑ŸÑÿπŸáÿß!",
                         "ÿßŸÑÿßŸÜÿ™ÿ∏ÿßÿ± ÿßŸÑÿ≠ÿßÿ≥ŸÖ: ÿ≥Ÿäÿ® ÿßŸÑŸÉŸàŸÉŸäÿ≤ ÿ™ÿ®ÿ±ÿØ ÿπŸÑŸâ ÿßŸÑÿµŸäŸÜŸäÿ© <span class='critical'>10-15 ÿØŸÇŸäŸÇÿ© ŸÉÿßŸÖŸÑÿ©</span>. ÿ®ÿ™ŸÉŸÖŸÑ ÿ≥Ÿàÿß ŸáŸÜÿß. ÿ®ÿπÿØŸäŸÜ ÿßŸÜŸÇŸÑŸáÿß ŸÑÿ¥ÿ®ŸÉÿ©. ÿßŸÑÿµÿ®ÿ± = ÿ∑ÿ±ÿßŸàÿ© ŸÖÿ´ÿßŸÑŸäÿ©! üòç"
                      ],
                     customScienceNote": "ÿÆŸÅŸÇ ÿßŸÑÿ≤ÿ®ÿØÿ© ÿßŸÑÿµŸÑÿ®ÿ© ÿßŸÑÿ®ÿßÿ±ÿØÿ© ÿ®Ÿäÿ≠ÿ®ÿ≥ ŸáŸàÿß ŸÉÿ™Ÿäÿ±ÿå ŸàÿØŸá ÿ®ŸäÿØŸä ÿ±ŸÅÿπ. ÿßŸÑÿØŸÇŸäŸÇ ÿßŸÑÿ≤ŸäÿßÿØÿ© ÿ®ŸäÿØŸä ŸÇŸàÿßŸÖ. ÿßŸÑÿ™ÿ®ÿ±ŸäÿØ ÿ®Ÿäÿ¨ŸÖÿØ ÿßŸÑÿØŸáŸàŸÜ ÿØŸä ÿ≤Ÿä ÿßŸÑÿ£ÿ≥ŸÖŸÜÿ™ (ÿ™ŸÇÿ±Ÿäÿ®ÿßŸã!) ŸÅÿ®ÿ™ÿ≥Ÿäÿ≠ ÿ£ÿ®ÿ∑ÿ£ÿå ŸàÿØŸá ÿ®ŸäŸÖŸÜÿπ ÿßŸÑŸÅÿ±ÿ¥ÿ©. ÿßŸÑÿ™ÿ®ÿ±ŸäÿØ ÿßŸÑÿ∑ŸàŸäŸÑ ÿ®ŸäÿÆŸÑŸä ÿßŸÑÿØŸÇŸäŸÇ Ÿäÿ™ÿ±ÿ∑ÿ® ÿ®ÿßŸÑŸÉÿßŸÖŸÑ ŸàÿßŸÑÿ•ŸÜÿ≤ŸäŸÖÿßÿ™ ÿ™ÿπŸÖŸÑ ÿ≥ÿ≠ÿ± ÿßŸÑŸÜŸÉŸáÿ©. ÿßŸÑŸÜÿ¥ÿßÿü ÿ®Ÿäÿ∂ÿπŸÅ ÿßŸÑÿ¨ŸÑŸàÿ™ŸäŸÜ ÿ¥ŸàŸäÿ©ÿå Ÿàÿ®ŸäÿØŸä ÿ∑ÿ±ÿßŸàÿ© ŸÑÿß ÿ™ÿµÿØŸÇ. ÿØŸä ŸÖÿπÿ¨ÿ≤ÿ© ŸÉŸàŸÉŸäÿ≤!"
                  },
                  thin: {
                      name: "ÿßŸÑŸÉŸàŸÉŸäÿ≤ ÿßŸÑÿ±ŸÅŸäÿπÿ© ŸàÿßŸÑŸÖŸÇÿ±ŸÖÿ¥ÿ©",
                      theme: "thin-theme",
                      imageSrcKey: 'thin',
                     butterMethod: "ÿßÿ≥ÿ™ÿÆÿØŸÖ <span class='critical'>ÿ≤ÿ®ÿØÿ© ÿ®ŸÜŸäÿ© ÿØÿßŸÅÿ¶ÿ© Ÿàÿ≥ÿßÿ¶ŸÑÿ©</span>. ŸÖÿ¥ ŸÖÿ≠ÿ™ÿßÿ¨ŸäŸÜ ŸÖÿ¨ŸáŸàÿØÿå Ÿäÿß ÿØŸàÿ® ÿÆŸÅŸÇÿ© ÿ®ÿ≥Ÿäÿ∑ÿ© ÿ®ÿßŸÑÿ≥ŸÑŸÉ ŸÖÿπ ÿßŸÑÿ≥ŸÉÿ±.",
                      chillingMethod: "<span class='critical'>ŸÖŸÖŸÜŸàÿπ ÿßŸÑÿ™ÿ®ÿ±ŸäÿØ ŸÜŸáÿßÿ¶ŸäÿßŸã!</span> ÿ®ÿ¨ÿØÿå ŸÅŸàÿ™Ÿáÿß. ÿ•ÿ≠ŸÜÿß *ÿπÿßŸäÿ≤ŸäŸÜ* ÿ£ŸÇÿµŸâ ŸÅÿ±ÿ¥ÿ© ŸÑŸÑŸÇÿ±ŸÖÿ¥ÿ©.",
                      otherNotes: "ÿßÿ≥ÿ™ÿÆÿØŸÖ ÿØŸÇŸäŸÇ ÿ£ŸÇŸÑ (<span class='highlight'>~2 ¬º ŸÑŸÄ 2 ¬Ω ŸÉŸàÿ®</span>). <span class='critical'>ÿ¥ŸäŸÑ ÿßŸÑÿ®ŸäŸÉŸÜÿ¨ ÿ®ÿßŸàÿØÿ± ÿÆÿßŸÑÿµ!</span> ÿ≥ŸÉÿ± <span class='highlight'>ÿ£ÿ®Ÿäÿ∂</span> ÿ£ŸÉÿ™ÿ± = ŸÇÿ±ŸÖÿ¥ÿ© ÿ£ÿπŸÑŸâ! <span class='highlight'>ÿßÿÆÿ™Ÿäÿßÿ±Ÿä: 1-2 ŸÖŸÑÿπŸÇÿ© ŸÉÿ®Ÿäÿ±ÿ© ÿ≠ŸÑŸäÿ®</span> ÿπÿ¥ÿßŸÜ ÿ™ÿ®ŸÇŸâ ÿ£ÿ±ŸÇ Ÿàÿ±ŸÇÿ©.",
                      ingredients: [
                          {"emoji": "üßà", "text": "ÿ≤ÿ®ÿØÿ© ÿ®ŸÜŸäÿ©: ŸÉŸàÿ® Ÿàÿßÿ≠ÿØÿå <span class='critical'>ÿØÿßŸÅÿ¶ÿ© Ÿàÿ≥ÿßÿ¶ŸÑ</span>"},
                          {"emoji": "üç¨", "text": "ÿ≥ŸÉÿ±: <span class='highlight'>ÿ≤ŸàÿØ ÿßŸÑÿ£ÿ®Ÿäÿ∂</span> (ŸÖÿ´ŸÑÿß 1 ¬º ŸÉŸàÿ® ÿ£ÿ®Ÿäÿ∂ / ¬Ω ŸÉŸàÿ® ÿ®ŸÜŸä) ŸÑŸÑŸÇÿ±ŸÖÿ¥ÿ©."}, // Simplified AR text
                          {"emoji": "üçö", "text": "ÿØŸÇŸäŸÇ: <span class='highlight critical'>ÿ£ŸÇŸÑ ~2 ¬º ŸÑŸÄ 2 ¬Ω ŸÉŸàÿ®</span> ÿØŸÇŸäŸÇ ŸÑÿ¨ŸÖŸäÿπ ÿßŸÑÿ£ÿ∫ÿ±ÿßÿ∂"},
                          {"emoji": "‚ú®", "text": "ŸÖŸàÿßÿØ ÿ±ÿßŸÅÿπÿ©: 1 ŸÖŸÑÿπŸÇÿ© ÿµÿ∫Ÿäÿ±ÿ© ÿ®ŸäŸÉŸÜÿ¨ ÿµŸàÿØÿß ŸÅŸÇÿ∑. <span class='highlight critical'>ŸÑÿß ÿ®ŸäŸÉŸÜÿ¨ ÿ®ÿßŸàÿØÿ±</span>"},
                          {"emoji": "üíß", "text": "ÿ≥ÿßÿ¶ŸÑ ÿ≤ŸäÿßÿØÿ© ÿßÿÆÿ™Ÿäÿßÿ±Ÿä: 1-2 ŸÖŸÑÿπŸÇÿ© ŸÉÿ®Ÿäÿ±ÿ© ÿ≠ŸÑŸäÿ® (ŸÑŸÑŸÅÿ±ÿ¥ÿ©)"},
                          {"emoji": "üç´", "text": "ÿ¥ŸàŸÉŸàŸÑÿßÿ™ÿ©: ~1 ¬Ω ŸÉŸàÿ® (255 ÿ¨ŸÖ)"},
                          {"emoji": "ü•ö", "text": "ÿ®Ÿäÿ∂: 2 ÿ®Ÿäÿ∂ÿ© ŸÉÿ®Ÿäÿ±ÿ© (+ ÿµŸÅÿßÿ± ÿ≤ŸäÿßÿØÿ© ÿßÿÆÿ™Ÿäÿßÿ±Ÿä)"},
                          {"emoji": "üè∫", "text": "ŸÅÿßŸÜŸäŸÑŸäÿß: 2 ŸÖŸÑÿπŸÇÿ© ÿµÿ∫Ÿäÿ±ÿ©"},
                          {"emoji": "üßÇ", "text": "ŸÖŸÑÿ≠: 1 ŸÖŸÑÿπŸÇÿ© ÿµÿ∫Ÿäÿ±ÿ© ŸÖŸÑÿ≠ ŸÉŸàÿ¥ÿ± (ÿ£Ÿà ¬Ω ŸÖŸÑÿπŸÇÿ© ÿµÿ∫Ÿäÿ±ÿ© ŸÖŸÑÿ≠ ÿ∑ÿπÿßŸÖ)"},
                          {"emoji": "ü•õ", "text": "ŸÇŸÜÿ®ŸÑÿ© ŸÜŸÉŸáÿ© ÿßÿÆÿ™Ÿäÿßÿ±Ÿäÿ©: 3-4 ŸÖŸÑÿßÿπŸÇ ŸÉÿ®Ÿäÿ±ÿ© ÿ®ŸàÿØÿ±ÿ© ŸÑÿ®ŸÜ ŸÖÿ≠ŸÖÿµÿ©"}
                      ],
                      steps: [
                          "ÿ¨Ÿáÿ≤ ÿßŸÑÿ¨ÿßŸÅ ÿßŸÑÿ£ŸàŸÑ: ÿßÿÆŸÅŸÇ ÿßŸÑÿØŸÇŸäŸÇ (ÿßŸÑŸÉŸÖŸäÿ© ÿßŸÑÿ£ŸÇŸÑ!)ÿå ÿßŸÑÿ®ŸäŸÉŸÜÿ¨ ÿµŸàÿØÿß <span class='highlight'>(ŸÅŸÇÿ∑!)</span>ÿå ÿßŸÑŸÖŸÑÿ≠ÿå ÿ®ŸàÿØÿ±ÿ© ÿßŸÑŸÑÿ®ŸÜ (ŸÑŸà Ÿáÿ™ÿ≥ÿ™ÿÆÿØŸÖ).",
                         "ÿßÿ™ÿ£ŸÉÿØ ÿ•ŸÜ ÿßŸÑÿ≤ÿ®ÿØÿ© ÿßŸÑÿ®ŸÜŸäÿ© <span class='critical'>ÿØÿßŸÅŸäÿ© ÿ≥ÿßÿ¶ŸÑÿ©</span> (ÿ®ÿ≥ ŸÖÿ¥ ÿ≥ÿÆŸÜÿ© ÿ£ŸàŸä).",
                          "ŸÅŸä ÿ∑ÿ®ŸÇ ŸÉÿ®Ÿäÿ±ÿå <span class='highlight'>ÿßÿÆŸÅŸÇ ÿ®ÿßŸÑÿ≥ŸÑŸÉ</span> ÿßŸÑÿ≤ÿ®ÿØÿ© ÿßŸÑÿØÿßŸÅŸäÿ© ŸÖÿπ ÿßŸÑÿ≥ŸÉÿ± (<span class='highlight'>ÿ®ÿßŸÑŸÜÿ≥ÿ®ÿ© ÿßŸÑŸÖÿπÿØŸÑÿ©</span>) ŸÑÿ≠ÿØ ŸÖÿß ŸäÿÆÿ™ŸÑÿ∑Ÿàÿß.",
                          "ÿßÿÆŸÅŸÇ ÿßŸÑÿ®Ÿäÿ∂ÿå ÿßŸÑŸÅÿßŸÜŸäŸÑŸäÿßÿå Ÿà<span class='highlight'>ÿßŸÑÿ≠ŸÑŸäÿ®/ÿßŸÑÿµŸÅÿßÿ± ÿßŸÑÿßÿÆÿ™Ÿäÿßÿ±Ÿä</span>.",
                          "ÿ∂ŸäŸÅ ÿ®ÿßŸÑÿ™ÿØÿ±Ÿäÿ¨ <span class='highlight'>ÿßŸÑŸÉŸÖŸäÿ© ÿßŸÑÿ£ŸÇŸÑ</span> ŸÖŸÜ ÿßŸÑŸÖŸÉŸàŸÜÿßÿ™ ÿßŸÑÿ¨ÿßŸÅÿ© ŸÑÿ≠ÿØ ŸÖÿß Ÿäÿß ÿØŸàÿ® ŸäÿÆÿ™ŸÑÿ∑Ÿàÿß. <span class='critical'>ŸÖÿ™ÿÆŸÑÿ∑ÿ¥ ÿ≤ŸäÿßÿØÿ©!</span>",
                          "ŸÇŸÑÿ® ÿßŸÑÿ¥ŸàŸÉŸàŸÑÿßÿ™ÿ© ÿßŸÑÿ¥Ÿäÿ®ÿ≥/ÿßŸÑŸÇÿ∑ÿπ.",
                         "<span class='highlight critical'>ŸÖŸÅŸäÿ¥ ÿ™ÿ®ÿ±ŸäÿØ.</span> ŸÉŸÖŸÑ ÿÆÿ®ÿ≤ ÿπŸÑŸâ ÿ∑ŸàŸÑ.",
                         "ÿ≥ÿÆŸÜ ÿßŸÑŸÅÿ±ŸÜ ÿπŸÑŸâ <span class='highlight'>175¬∞ŸÖ (350¬∞ŸÅ)</span>. ÿßŸÅÿ±ÿ¥ ÿßŸÑÿµŸàÿßŸÜŸä.",
                          "ŸÉŸàÿ± <span class='highlight'>ŸÉÿ±ÿßÿ™ ÿ£ÿµÿ∫ÿ± (~1.5-2 ŸÖŸÑÿπŸÇÿ© ŸÉÿ®Ÿäÿ±ÿ©)</span>. ÿ≠ÿ∑ŸáŸÖ ÿ®ÿπŸäÿØ ÿπŸÜ ÿ®ÿπÿ∂ ÿ£ŸàŸä. ŸÖŸÖŸÉŸÜ ÿ™ÿ®ÿ∑ÿ∑ŸáŸÖ ÿ¥ŸàŸäÿ©.",
                          "ÿßÿÆÿ®ÿ≤ ŸÑŸÖÿØÿ© <span class='highlight'>12-15 ÿØŸÇŸäŸÇÿ©</span> ŸÑÿ≠ÿØ ŸÖÿß Ÿäÿ®ŸÇŸâ ŸÑŸàŸÜŸáÿß ÿØŸáÿ®Ÿä ÿ∫ÿßŸÖŸÇ ŸÖŸÜ ŸÉŸÑ ÿ≠ÿ™ÿ© ŸÑŸÑŸÇÿ±ŸÖÿ¥ÿ©.",
                          "ÿ≥Ÿäÿ®Ÿáÿß ÿ™ÿ®ÿ±ÿØ ÿπŸÑŸâ ÿßŸÑÿµŸäŸÜŸäÿ© 5 ÿØŸÇÿßŸäŸÇÿå ÿ®ÿπÿØŸäŸÜ ÿßŸÜŸÇŸÑŸáÿß ŸÑÿ¥ÿ®ŸÉÿ©. ÿ®ÿ™ŸÇÿ±ŸÖÿ¥ ŸàŸáŸä ÿ®ÿ™ÿ®ÿ±ÿØ." // Simplified ending
                      ],
                      customScienceNote": "ÿßŸÑÿ≤ÿ®ÿØÿ© ÿßŸÑÿ≥ÿßŸäŸÑÿ© ÿßŸÑÿØÿßŸÅŸäÿ© = ÿ™ÿ≥Ÿäÿ≠ Ÿàÿ™ŸÅÿ±ÿ¥ ŸÅŸàÿ±ÿßŸã ŸÅŸä ÿßŸÑŸÅÿ±ŸÜ! ÿßŸÑÿØŸÇŸäŸÇ ÿßŸÑÿ£ŸÇŸÑ ŸäÿπŸÜŸä ŸÇŸàÿßŸÖ ÿ£ÿ∂ÿπŸÅ ŸäŸÖÿ≥ŸÉŸáÿß. ÿßŸÑÿ≥ŸÉÿ± ÿßŸÑÿ£ÿ®Ÿäÿ∂ ÿßŸÑŸÉÿ™Ÿäÿ± ÿ®Ÿäÿ™ŸÉÿ±ŸÖŸÑ ÿ®ÿ¥ŸÉŸÑ ÿ¨ŸÖŸäŸÑ ÿπÿ¥ÿßŸÜ ÿßŸÑŸÇÿ±ŸÖÿ¥ÿ© ÿØŸä. ŸÖŸÅŸäÿ¥ ÿ®ŸäŸÉŸÜÿ¨ ÿ®ÿßŸàÿØÿ± ŸäÿπŸÜŸä ŸÖŸÅŸäÿ¥ ÿ±ŸÅÿπ ÿ≤ŸäÿßÿØÿ© ŸäŸÇÿßŸàŸÖ ÿßŸÑŸÅÿ±ÿ¥ÿ©. ÿßŸÑÿ®ŸäŸÉŸÜÿ¨ ÿµŸàÿØÿß ÿ®ÿ™ÿ¥ÿ¨ÿπ ÿßŸÑŸÑŸàŸÜ ÿßŸÑÿ®ŸÜŸä Ÿàÿ¥ŸàŸäÿ© ÿ™ŸÅÿßÿπŸÑ ŸáŸÜÿß. ÿßŸÑŸÖŸàÿ∂Ÿàÿπ ŸÉŸÑŸá ÿ•ŸÜŸÜÿß ŸÜÿ∑ŸÑŸÇ ÿßŸÑÿπŸÜÿßŸÜ ŸÑŸÑŸÅÿ±ÿ¥ÿ©!"
                  }
              },
              // Tips in Arabic
              tips: [
                  {"key": "tip1", "emoji": "üíé", "text": "ÿßŸÑÿ¨ŸàÿØÿ© ŸÖŸáŸÖÿ©: ÿßÿ≥ÿ™ÿÆÿØŸÖ ÿ¥ŸàŸÉŸàŸÑÿßÿ™ÿ© ŸÉŸàŸäÿ≥ÿ© (ÿ≤Ÿä ÿØÿ±Ÿàÿ®ÿ≥Ÿä!) ŸàŸÅÿßŸÜŸäŸÑÿß ÿ≠ŸÇŸäŸÇŸäÿ©."},
                  {"key": "tip2", "emoji": "‚öñÔ∏è", "text": "ÿßŸÑÿØŸÇŸäŸÇ: ÿßŸÖŸÑÿ£ ÿßŸÑŸÉŸàÿ® ÿ®ÿßŸÑŸÖŸÑÿπŸÇÿ© ŸÖÿ¥ ÿ™ÿ∫ÿ±ŸÅŸá (ÿ£Ÿà ÿßÿ≥ÿ™ÿÆÿØŸÖ ŸÖŸäÿ≤ÿßŸÜ ŸÑŸà ÿπÿßŸäÿ≤ ÿØŸÇÿ© ŸÖÿ™ŸÜÿßŸáŸäÿ©!)."},
                  {"key": "tip3", "emoji": "ü§´", "text": "ÿ≥ÿ± ÿßŸÑÿÆŸÑÿ∑: ŸÇŸÅ ŸÅŸàÿ± ŸÖÿß ÿßŸÑÿØŸÇŸäŸÇ ŸäÿÆÿ™ŸÅŸä. ÿßŸÑŸÉŸàŸÉŸäÿ≤ Ÿáÿ™ÿ®ŸÇŸâ ÿ∑ÿ±Ÿäÿ© Ÿàÿ≠ŸÑŸàÿ©."},
                  {"key": "tip4", "emoji": "üßä", "text": "ÿßŸÑÿ™ÿ®ÿ±ŸäÿØ ŸÖÿ¥ ŸÖÿ¨ÿ±ÿØ ÿßŸÜÿ™ÿ∏ÿßÿ±: ÿ®ŸäÿπŸÖŸÇ ÿßŸÑÿ∑ÿπŸÖ ŸàŸäÿ™ÿ≠ŸÉŸÖ ŸÅŸä ÿßŸÑÿ¥ŸÉŸÑ ŸàÿßŸÑŸÇŸàÿßŸÖ. ÿßÿ≠ÿ™ÿ±ŸÖ ÿßŸÑÿ™ÿ®ÿ±ŸäÿØ (ŸÑŸÖÿß ŸÜÿ≠ÿ™ÿßÿ¨Ÿá!)."},
                  {"key": "tip5", "emoji": "ü•Ñ", "text": "ÿßÿ≥ÿ™ÿÆÿØŸÖ ŸÖÿπŸÑŸÇÿ© ÿ¢Ÿäÿ≥ ŸÉÿ±ŸäŸÖ ÿπÿ¥ÿßŸÜ ÿßŸÑŸÉŸàŸÉŸäÿ≤ ÿ™ÿ∑ŸÑÿπ ŸÇÿØ ÿ®ÿπÿ∂ Ÿàÿ¥ŸÉŸÑŸáÿß ÿ≠ŸÑŸà."},
                  {"key": "tip6", "emoji": "üßÇ", "text": "ÿ±ÿ¥ÿ© ŸÖŸÑÿ≠ ÿÆÿ¥ŸÜ ÿπ ÿßŸÑŸàÿ¥ *ŸÇÿ®ŸÑ* ÿßŸÑÿÆÿ®ÿ≤ ÿ®ÿ™ÿ∏Ÿáÿ± ÿ∑ÿπŸÖ ÿßŸÑÿ¥ŸàŸÉŸàŸÑÿßÿ™ÿ©! Ÿàÿ¥ŸäÿßŸÉÿ©."},
                  {"key": "tip7", "emoji": "üí•", "text": "ÿπÿßŸäÿ≤ ÿßŸÑŸÉŸàŸÉŸäÿ≤ ŸÅŸäŸáÿß ÿ™ÿ¨ÿßÿπŸäÿØ ÿ¥ŸÉŸÑŸáÿß ÿ≠ŸÑŸàÿü ÿßÿÆÿ®ÿ∑ ÿßŸÑÿµŸäŸÜŸäÿ© ÿπ ÿßŸÑÿ±ÿÆÿßŸÖÿ© ŸÖÿ±ÿ™ŸäŸÜ ÿ™ŸÑÿßÿ™ÿ© ÿ¢ÿÆÿ± ŸÉÿßŸÖ ÿØŸÇŸäŸÇÿ© ÿÆÿ®ÿ≤."},
                  {"key": "tip8", "emoji": "‚è≥", "text": "ÿßŸÑÿ™ÿ®ÿ±ŸäÿØ ÿπ ÿßŸÑÿµŸäŸÜŸäÿ© ÿ¨ÿ≤ÿ° ŸÖŸáŸÖ: ÿ≥Ÿäÿ® ÿßŸÑŸÉŸàŸÉŸäÿ≤ 5-10 ÿØŸÇÿßŸäŸÇ (ÿßŸÑÿ≥ŸÖŸäŸÉÿ© 10-15) ŸÇÿ®ŸÑ ŸÖÿß ÿ™ŸÜŸÇŸÑŸáÿß!"},
                  {"key": "tip9", "emoji": "‚ùÑÔ∏è", "text": "ŸÅÿ±ÿ≤ŸÜ ÿ≤Ÿä ÿßŸÑŸÖÿ≠ÿ™ÿ±ŸÅŸäŸÜ: ŸÉŸàÿ± ÿßŸÑÿπÿ¨ŸäŸÜ Ÿàÿ≠ÿ∑Ÿáÿß ÿπ ÿµŸäŸÜŸäÿ© ÿ™ÿ™ÿ¨ŸÖÿØÿå ÿ®ÿπÿØŸäŸÜ ÿ¥ŸäŸÑŸáÿß ŸÅŸä ŸÉŸäÿ≥. ÿßÿÆÿ®ÿ≤Ÿáÿß ŸÖÿ¨ŸÖÿØÿ©! ÿ≤ŸàÿØ ÿØŸÇŸäŸÇÿ© ÿ£Ÿà ÿßÿ™ŸÜŸäŸÜ ŸÑŸÑÿÆÿ®ÿ≤ (ŸàŸÇŸÑŸÑ ÿßŸÑÿ≠ÿ±ÿßÿ±ÿ© ÿ¥ŸàŸäÿ© 175¬∞ŸÖ). ŸÉŸàŸÉŸäÿ≤ ÿ∑ÿßÿ≤ÿ© ÿ£Ÿä ŸàŸÇÿ™! Ÿäÿßÿßÿßÿ≥!"},
                  {"key": "sci1", "emoji": "üî•", "text": "ÿßŸÑÿ≤ÿ®ÿØÿ© ÿßŸÑÿ®ŸÜŸäÿ© = ŸÉŸÜÿ≤ ŸÜŸÉŸáÿßÿ™: ÿØŸä ÿÆŸÑÿßÿµÿ© ÿßŸÑÿ≠ŸÑŸäÿ® ÿßŸÑŸÖÿ≠ŸÖÿµÿ© Ÿàÿ∑ÿπŸÖ ÿßŸÑŸÖŸÉÿ≥ÿ±ÿßÿ™."},
                  {"key": "sci2", "emoji": "ü•õ", "text": "ÿ®ŸàÿØÿ±ÿ© ÿßŸÑÿ≠ŸÑŸäÿ® ÿßŸÑŸÖÿ≠ŸÖÿµÿ© = ŸÜŸÉŸáÿ© ÿ≤ŸäÿßÿØÿ©: ÿπÿßŸäÿ≤ ÿ∑ÿπŸÖ ŸÖŸÉÿ±ŸÖŸÑ ŸàŸÖŸÉÿ≥ÿ±ÿßÿ™ ÿ≤ŸäÿßÿØÿ©ÿü ŸáŸà ÿØŸá."}
              ]
          } // *** END ARABIC ***
     };

    // --- Helper Functions ---
    function getLangData(lang = currentLanguage) {
        return contentData[lang] || contentData.en; // Fallback to English
    }

    // --- Core Update Functions ---

     function updateTextContent() {
         const langData = getLangData();
         const elements = document.querySelectorAll('[data-lang-key]');
         console.log(`Updating text content for language: ${currentLanguage}`);

         elements.forEach(el => {
             const key = el.dataset.langKey;
             let text = langData[key]; // Get base text

             if (text === undefined) {
                 // console.warn(`Missing lang key "${key}" for lang "${currentLanguage}"`);
                 text = ''; // Assign empty string if key is missing
             }

             // --- Handle specific elements / dynamic content ---
             if (el === yieldInfoP) {
                 // Yield info might be specific per cookie later, for now use general one
                 text = langData.yieldInfo || '';
             } else if (el === keyDiffTitleElement) {
                 const baseTitle = langData.keyDifferencesTitle || 'Key Differences';
                 const cookieName = currentCookieType && langData.cookies && langData.cookies[currentCookieType]
                                   ? langData.cookies[currentCookieType].name
                                   : '';
                 text = cookieName ? `${baseTitle} <span class='dynamic-cookie-name'>${cookieName}!</span>` : baseTitle;
             } else if (key === 'recipeTitlePrefix') {
                 const prefix = langData.recipeTitlePrefix || 'Recipe for:';
                 const cookieName = currentCookieType && langData.cookies && langData.cookies[currentCookieType]
                                   ? langData.cookies[currentCookieType].name
                                   : '';
                 text = cookieName ? `${prefix} ${cookieName}!` : ''; // Only show if cookie selected
             } else if (key === 'pistachioLinkText') { // Handle the pistachio link
                 const linkElement = el; // It's the <a> tag itself
                 const linkHref = langData.pistachioLinkHref;
                 if (linkElement && linkHref) {
                     linkElement.href = linkHref;
                     linkElement.style.display = 'inline'; // Make sure it's visible
                     linkElement.previousElementSibling.style.display = 'inline'; // Show "Best Spread..." text
                     linkElement.nextElementSibling.style.display = 'inline'; // Show "(Amazon EG)"
                 } else if (linkElement) {
                     linkElement.style.display = 'none'; // Hide if no link provided
                     linkElement.previousElementSibling.style.display = 'none';
                     linkElement.nextElementSibling.style.display = 'none';
                 }
                 // Text is already set from langData[key]
             }
             // --- End specific element handling ---


             // Update element content only if it differs
             if (el.innerHTML !== text) {
                 el.innerHTML = text;
             }
         });

          // Update document title (strip HTML tags)
          document.title = langData.mainTitle ? langData.mainTitle.replace(/<[^>]*>?/gm, '') : "Omar's Cookie Guide";

         // Update Tips List
         if (tipsListContainer && langData.tips) {
             tipsListContainer.innerHTML = ''; // Clear existing tips
             langData.tips.forEach(tip => {
                  const li = document.createElement('li');
                  li.dataset.emoji = tip.emoji || 'üí°';
                  li.innerHTML = tip.text; // Use innerHTML for potential formatting
                  tipsListContainer.appendChild(li);
              });
          } else if (tipsListContainer) {
              tipsListContainer.innerHTML = ''; // Clear if no tips data
          }
         console.log(`Text content updated for ${currentLanguage}.`);
     }


    function updateRecipeView() {
        const langData = getLangData();
        console.log(`Updating recipe view for type: ${currentCookieType || 'None'}, lang: ${currentLanguage}`);

        // --- Reset View if No Cookie Selected ---
        if (!currentCookieType || !langData.cookies || !langData.cookies[currentCookieType]) {
            console.log("No cookie selected or data missing, showing placeholder.");
            if (recipeDetailsContainer) {
                recipeDetailsContainer.innerHTML = `<div class="placeholder">${langData.placeholderSelect || 'Select a cookie style above!'}</div>`;
                recipeDetailsContainer.className = 'recipe-container'; // Reset theme
            }
            if (keyDifferencesContainer) keyDifferencesContainer.classList.add('visually-hidden');
            if (cookieImageHeader) cookieImageHeader.classList.remove('visible');
            if (easterEggContainer) easterEggContainer.classList.remove('visible');
            if (omarFavBubble) omarFavBubble.classList.remove('visible');

            // Reset key difference title correctly
            if (keyDiffTitleElement) keyDiffTitleElement.innerHTML = langData.keyDifferencesTitle || 'Key Differences!';
            return; // Stop execution
        }

        // --- Valid Cookie Selected - Proceed ---
        const recipe = langData.cookies[currentCookieType];
        if (!recipe) {
            console.error(`Recipe data not found for type "${currentCookieType}" in lang "${currentLanguage}"`);
            return;
        }

        console.log(`Rendering recipe: ${recipe.name}`);

        // Update Omar's Fav Bubble Visibility
        if (omarFavBubble) {
            omarFavBubble.classList.toggle('visible', currentCookieType === 'thick');
        }

        // Update Top Image Header
        if (selectedCookieImage && cookieImageHeader) {
            const imageKey = recipe.imageSrcKey; // Use the key from data
            const imagePath = imageKey ? IMAGE_PATHS[imageKey] : ''; // Get path from IMAGE_PATHS
            if (imagePath) {
                selectedCookieImage.src = imagePath;
                selectedCookieImage.alt = `Delicious ${recipe.name || currentCookieType} cookie`; // Update alt text
                cookieImageHeader.classList.add('visible');
                console.log(`Set image to: ${imagePath}`);
            } else {
                cookieImageHeader.classList.remove('visible'); // Hide if no image path found
                console.log(`No image path found for key: ${imageKey}`);
            }
        }

        // Update Key Differences Section
        if (keyDifferencesContainer) {
            if (butterMethodDesc) butterMethodDesc.innerHTML = recipe.butterMethod || '-';
            if (chillingMethodDesc) chillingMethodDesc.innerHTML = recipe.chillingMethod || '-';
            if (otherNotesDesc) otherNotesDesc.innerHTML = recipe.otherNotes || '-';
            keyDifferencesContainer.classList.remove('visually-hidden'); // Make sure it's visible
             // Title updated in updateTextContent
            console.log("Updated key differences section.");
        }

        // Build and Update Recipe Details Section
        if (recipeDetailsContainer) {
            recipeDetailsContainer.className = `recipe-container ${recipe.theme || ''}`; // Apply theme class

            let ingredientsHtml = `<h4 class="list-header" data-lang-key="ingredientsHeader">${langData.ingredientsHeader || 'Ingredients:'}</h4><ul class="ingredient-list">`;
            if (recipe.ingredients && Array.isArray(recipe.ingredients)) {
                recipe.ingredients.forEach(ing => {
                    // Add class based on optional 'key' for better styling maybe?
                    ingredientsHtml += `<li class="${ing.key || ''}" data-emoji="${ing.emoji || 'üç™'}">${ing.text}</li>`;
                });
            } else {
                ingredientsHtml += `<li>No ingredients listed.</li>`; // Fallback
            }
            ingredientsHtml += '</ul>';

            let howToToastHtml = '';
            if (langData.howToToastMilkPowderTitle && langData.howToToastMilkPowder) {
                howToToastHtml = `<div class="how-to-toast">
                                    <h4 data-lang-key="howToToastMilkPowderTitle">${langData.howToToastMilkPowderTitle}</h4>
                                    <p data-lang-key="howToToastMilkPowder">${langData.howToToastMilkPowder}</p>
                                  </div>`;
            }

            let stepsHtml = `<h4 class="list-header" data-lang-key="stepsHeader">${langData.stepsHeader || 'Steps:'}</h4>${howToToastHtml}<ol class="steps-list">`;
            if (recipe.steps && Array.isArray(recipe.steps)) {
                recipe.steps.forEach(step => stepsHtml += `<li>${step}</li>`);
            } else {
                stepsHtml += `<li>No steps listed.</li>`; // Fallback
            }
            stepsHtml += '</ol>';

            let scienceHtml = '';
            if (recipe.customScienceNote && langData.scienceHeader) {
                scienceHtml = `<div class="science-note">
                                <h4 data-lang-key="scienceHeader">${langData.scienceHeader}</h4>
                                <p>${recipe.customScienceNote}</p>
                               </div>`;
            }

            // Use data-lang-key for the recipe title prefix as well
            const recipeTitle = `<h3 data-lang-key="recipeTitlePrefix">${(langData.recipeTitlePrefix || 'Recipe:')} ${recipe.name || 'Cookies'}!</h3>`;
            recipeDetailsContainer.innerHTML = recipeTitle + ingredientsHtml + stepsHtml + scienceHtml;
            console.log("Updated recipe details section.");
        }

        // Handle Easter Egg Visibility
        if (easterEggContainer) {
            const showEasterEgg = (currentCookieType === 'thick');
            if (showEasterEgg) {
                console.log("Showing Easter Egg for 'thick' type.");
                if (stuffedCookieImage) {
                    stuffedCookieImage.src = IMAGE_PATHS.stuffed || '';
                    stuffedCookieImage.alt = "Delicious stuffed cookie example"; // Add alt text
                }
                // Update Easter Egg Text Fields directly using keys (or let updateTextContent handle it if keys match)
                // Example: easterEggContainer.querySelector('[data-lang-key="easterEggTitle"]').innerHTML = langData.easterEggTitle || '';
                updateTextContent(); // Ensure all text inside Easter egg is updated

                easterEggContainer.style.display = 'block'; // Ensure it takes up space before animating
                 requestAnimationFrame(() => { // Delay adding class slightly
                    easterEggContainer.classList.add('visible');
                 });
            } else {
                console.log("Hiding Easter Egg.");
                easterEggContainer.classList.remove('visible');
                 // Let CSS handle hiding via transition. The 'visually-hidden' class might conflict,
                 // so rely on opacity/max-height in CSS. Setting display:none after transition can be done via event listener if needed.
                // easterEggContainer.addEventListener('transitionend', function handleTransitionEnd(event) {
                //     if (event.propertyName === 'opacity' && !easterEggContainer.classList.contains('visible')) {
                //          easterEggContainer.style.display = 'none';
                //          easterEggContainer.removeEventListener('transitionend', handleTransitionEnd); // Clean up listener
                //      }
                //  });
                 // For simplicity now, rely on CSS opacity/max-height transition. Add display:none later if needed.
            }
        }
    }

    // --- Language Switching Function ---
    function switchLanguage(lang) {
        if (!contentData[lang]) {
            console.warn(`Language "${lang}" not found. Defaulting to 'en'.`);
            lang = 'en';
        }
        if (lang === currentLanguage) return; // No change needed

        console.log(`Switching language to: ${lang}`);
        currentLanguage = lang;
        body.dir = (lang === 'ar') ? 'rtl' : 'ltr'; // Set text direction

        // Update language button active states
        langButtons.forEach(btn => btn.classList.toggle('active', btn.dataset.lang === lang));

        // Update all text content and the recipe view
        updateTextContent();
        updateRecipeView(); // Re-render views with the new language
    }

    // --- Event Listeners ---
    // Language Buttons
    langButtons.forEach(button => button.addEventListener('click', (e) => {
        e.preventDefault();
        switchLanguage(button.dataset.lang);
    }));

    // Cookie Type Selector Buttons
    typeSelectorButtons.forEach(button => {
        button.addEventListener('click', (e) => {
            e.preventDefault();
            const clickedType = button.dataset.type;

            if (clickedType === currentCookieType) {
                // Optional: Deselect if clicking active button again
                // currentCookieType = null;
                // typeSelectorButtons.forEach(btn => btn.classList.remove('active'));
                // console.log("Deselected cookie type.");

                // Keep it simple for now: Do nothing if clicking active button
                 console.log(`Cookie type "${clickedType}" already active.`);
                return;
            }

            console.log(`Cookie type selected: ${clickedType}`);
            currentCookieType = clickedType;

            // Update active button state
            typeSelectorButtons.forEach(btn => btn.classList.remove('active'));
            button.classList.add('active');

            // Update UI
            updateTextContent(); // Update general text (especially titles needing the name)
            updateRecipeView(); // Update the main view

            // Optional: Scroll to the key differences or recipe smoothly
            if (keyDifferencesContainer && !keyDifferencesContainer.classList.contains('visually-hidden')) {
                 keyDifferencesContainer.scrollIntoView({ behavior: 'smooth', block: 'start' });
             } else if (recipeDetailsContainer) {
                 recipeDetailsContainer.scrollIntoView({ behavior: 'smooth', block: 'start' });
             }
        });
    });

    // --- Initial Setup ---
    console.log("Running Initial Setup...");
    // Set initial language based on default state, render placeholder text & tips
    switchLanguage(currentLanguage);

    // Hide elements that require a selection initially
    if (keyDifferencesContainer) keyDifferencesContainer.classList.add('visually-hidden');
    if (cookieImageHeader) cookieImageHeader.classList.remove('visible');
    if (easterEggContainer) {
         easterEggContainer.classList.remove('visible');
         // easterEggContainer.style.display = 'none'; // Hide completely until needed
     }
    if (omarFavBubble) omarFavBubble.classList.remove('visible');

    // Fade in the page after a brief delay
    setTimeout(() => {
        body.classList.add('loaded');
        console.log("Page loaded class added.");
    }, 100); // 100ms delay

}); // End DOMContentLoaded
// ==== JAVASCRIPT LOGIC ENDS HERE ====
